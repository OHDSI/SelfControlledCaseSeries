[{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"vignette focus running several different analyses several exposure-outcome pairs can useful want explore sensitivity analyses choices, include controls, run experiment similar OMOP experiment empirically identify optimal analysis choices particular research question. vignette assumes already familiar SelfControlledCaseSeries package able perform single studies. walk steps needed perform exemplar set analyses, selected well-studied topic effect nonsteroidal anti-inflammatory drugs (NSAIDs) gastrointestinal (GI) bleeding-related hospitalization. simplicity, focus one NSAID: diclofenac. execute various variations analysis primary exposure pair large set negative control exposures.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"general-approach","dir":"Articles","previous_headings":"","what":"General approach","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"general approach running set analyses specify function arguments functions normally call, create sets function arguments. final outcome models well intermediate data objects saved disk later extraction. analysis executed calling functions sequence: getDbSccsData() createStudyPopulation() createSccsIntervalData() fitSccsModel() provide several analyses SelfControlledCaseSeries package, determine whether analyses exposure-outcome pairs anything common, take advantage fact. example, specify several exposure-outcome pairs outcome, data outcome extracted . function arguments need define divided four groups: Exposures-outcome sets: arguments specific hypothesis interest, case self-controlled case series combination one exposures outcome. Analyses: arguments directly specific hypothesis interest, washout window, whether adjust age seasonality, etc. Arguments output previous function SelfControlledCaseSeries package, SccsIntervalData argument createSccsIntervalData function. specified user. Arguments specific environment, connection details connecting server, name schema holding CDM data. Arguments groups 1 2 together fully specify analyses, sharing sites allow fully reproduce study. Together, therefore referred ‘SCCS analysis specifications’.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"preparation-for-the-example","dir":"Articles","previous_headings":"","what":"Preparation for the example","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"need tell R connect server data . SelfControlledCaseSeries uses DatabaseConnector package, provides createConnectionDetails function. Type ?createConnectionDetails specific settings required various database management systems (DBMS). example, one might connect PostgreSQL database using code: last three lines define cdmDatabaseSchema cohortDatabaseSchema variables, well CDM version. ’ll use later tell R data CDM format live, want store (outcome) cohorts, version CDM used. Note Microsoft SQL Server, databaseschemas need specify database schema, example cdmDatabaseSchema <- \"my_cdm_data.dbo\". also need prepare exposures outcomes interest. drug_era table OMOP Common Data Model already contains pre-specified cohorts users ingredient level, use exposures. outcome can use OHDSI PhenotypeLibrary retrieve community-approved definition GI bleeding: can use CohortGenerator package instantiate cohort:","code":"connectionDetails <- createConnectionDetails(   dbms = \"postgresql\",   server = \"localhost/ohdsi\",   user = \"joe\",   password = \"supersecret\" )  outputFolder <- \"s:/temp/sccsVignette2\"  cdmDatabaseSchema <- \"my_cdm_data\" cohortDatabaseSchema <- \"my_cohorts\" options(sqlRenderTempEmulationSchema = NULL) giBleed <- 77 cohortDefinitionSet <- PhenotypeLibrary::getPlCohortDefinitionSet(giBleed) connection <- DatabaseConnector::connect(connectionDetails) cohortTableNames <- CohortGenerator::getCohortTableNames(cohortTable) CohortGenerator::createCohortTables(connection = connection,                                     cohortDatabaseSchema = cohortDatabaseSchema,                                     cohortTableNames = cohortTableNames) counts <- CohortGenerator::generateCohortSet(connection = connection,                                              cdmDatabaseSchema = cdmDatabaseSchema,                                              cohortDatabaseSchema = cohortDatabaseSchema,                                              cohortTableNames = cohortTableNames,                                              cohortDefinitionSet = cohortDefinitionSet) DatabaseConnector::disconnect(connection)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"specifying-exposures-outcome-sets","dir":"Articles","previous_headings":"","what":"Specifying exposures-outcome sets","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"first group arguments define exposures outcome. demonstrate create exposures-outcome set: defined outcome interest cohort ID stored giBleed. exposures include diclofenac (concept ID 1124300) large number negative control exposures. Note negative controls specify trueEffectSize = 1 since assume negative controls causal effect outcome. convenient way save exposuresOutcomeList file using saveExposuresOutcomeList function, can load using loadExposuresOutcomeList function.","code":"diclofenac <- 1124300 negativeControls <- c(   705178, 705944, 710650, 714785, 719174, 719311, 735340, 742185,   780369, 781182, 924724, 990760, 1110942, 1111706, 1136601,   1317967, 1501309, 1505346, 1551673, 1560278, 1584910, 19010309,   40163731 ) giBleed <- 77  exposuresOutcomeList <- list() exposuresOutcomeList[[1]] <- createExposuresOutcome(   outcomeId = giBleed,   exposures = list(createExposure(exposureId = diclofenac)) ) for (exposureId in c(negativeControls)) {   exposuresOutcome <- createExposuresOutcome(     outcomeId = giBleed,     exposures = list(createExposure(exposureId = exposureId, trueEffectSize = 1))   )   exposuresOutcomeList[[length(exposuresOutcomeList) + 1]] <- exposuresOutcome }"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"specifying-analyses","dir":"Articles","previous_headings":"","what":"Specifying analyses","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"second group arguments specific hypothesis interest, comprise majority arguments. function called execution analyses companion function creates core settings function. example, fitSccsModel() function createFitSccsModelArgs() function. companion functions can used create arguments used execution: argument explicitly specified user assume default value specified companion function. Note several arguments concept cohort definition IDs can use exposureIdRef (default = \"exposureId\") Exposure objects used createExposuresOutcome(). case, defined argument includeEraIds get value exposureId variable, meaning take value diclofenac concept ID, negative control IDs. Also note set exposureOfInterest = TRUE, cause estimate covariate included result summary later . Important: least one era covariate analysis must exposureOfInterest = TRUE. can now combine arguments various functions single analysis: Note assigned analysis ID (1) set arguments. can use later link results back specific set choices. also include short description analysis. can easily create analyses, example including adjustments age seasonality, including drugs model: analyses can combined list: convenient way save sccsAnalysisList file using saveSccsAnalysisList function, can load using loadSccsAnalysisList function. combine exposures-outcomes analysis lists full sccsAnalysisSpecifications: specifies run analyses hypotheses interest, meaning total number outcome models length(sccsAnalysisList) * length(exposuresOutcomeList). (want, can skip combinations using analysesToExclude argument createSccsAnalysesSpecifications().)","code":"getDbSccsDataArgs <- createGetDbSccsDataArgs(   deleteCovariatesSmallCount = 100,   exposureIds = c(),   maxCasesPerOutcome = 100000 )  createStudyPopulationArgs <- createCreateStudyPopulationArgs(   naivePeriod = 180,   firstOutcomeOnly = FALSE )  covarExposureOfInt <- createEraCovariateSettings(   label = \"Exposure of interest\",   includeEraIds = \"exposureId\",   start = 1,   end = 0,   endAnchor = \"era end\",   profileLikelihood = TRUE,   exposureOfInterest = TRUE )  createSccsIntervalDataArgs1 <- createCreateSccsIntervalDataArgs(   eraCovariateSettings = covarExposureOfInt )  fitSccsModelArgs <- createFitSccsModelArgs() sccsAnalysis1 <- createSccsAnalysis(   analysisId = 1,   description = \"Simplest model\",   getDbSccsDataArgs = getDbSccsDataArgs,   createStudyPopulationArgs = createStudyPopulationArgs,   createIntervalDataArgs = createSccsIntervalDataArgs1,   fitSccsModelArgs = fitSccsModelArgs ) ppis <- c(911735, 929887, 923645, 904453, 948078, 19039926)  covarPreExp <- createEraCovariateSettings(   label = \"Pre-exposure\",   includeEraIds = \"exposureId\",   start = -30,   end = -1,   endAnchor = \"era start\",   preExposure = TRUE )  covarProphylactics <- createEraCovariateSettings(   label = \"Prophylactics\",   includeEraIds = ppis,   start = 1,   end = 0,   endAnchor = \"era end\" )  createSccsIntervalDataArgs2 <- createCreateSccsIntervalDataArgs(   eraCovariateSettings = list(     covarExposureOfInt,     covarPreExp,     covarProphylactics   ) )  sccsAnalysis2 <- createSccsAnalysis(   analysisId = 2,   description = \"Including prophylactics and pre-exposure\",   getDbSccsDataArgs = getDbSccsDataArgs,   createStudyPopulationArgs = createStudyPopulationArgs,   createIntervalDataArgs = createSccsIntervalDataArgs2,   fitSccsModelArgs = fitSccsModelArgs )  seasonalitySettings <- createSeasonalityCovariateSettings(seasonKnots = 5)  calendarTimeSettings <- createCalendarTimeCovariateSettings(calendarTimeKnots = 5)  createSccsIntervalDataArgs3 <- createCreateSccsIntervalDataArgs(   eraCovariateSettings = list(     covarExposureOfInt,     covarPreExp,     covarProphylactics   ),   seasonalityCovariateSettings = seasonalitySettings,   calendarTimeCovariateSettings = calendarTimeSettings )  sccsAnalysis3 <- createSccsAnalysis(   analysisId = 3,   description = \"Including prophylactics, season, calendar time, and pre-exposure\",   getDbSccsDataArgs = getDbSccsDataArgs,   createStudyPopulationArgs = createStudyPopulationArgs,   createIntervalDataArgs = createSccsIntervalDataArgs3,   fitSccsModelArgs = fitSccsModelArgs )  covarAllDrugs <- createEraCovariateSettings(   label = \"Other exposures\",   includeEraIds = c(),   excludeEraIds = \"exposureId\",   stratifyById = TRUE,   start = 1,   end = 0,   endAnchor = \"era end\",   allowRegularization = TRUE )  createSccsIntervalDataArgs4 <- createCreateSccsIntervalDataArgs(   eraCovariateSettings = list(     covarExposureOfInt,     covarPreExp,     covarAllDrugs   ),   seasonalityCovariateSettings = seasonalitySettings,   calendarTimeCovariateSettings = calendarTimeSettings )  sccsAnalysis4 <- createSccsAnalysis(   analysisId = 4,   description = \"Including all other drugs\",   getDbSccsDataArgs = getDbSccsDataArgs,   createStudyPopulationArgs = createStudyPopulationArgs,   createIntervalDataArgs = createSccsIntervalDataArgs4,   fitSccsModelArgs = fitSccsModelArgs )  createSccsIntervalDataArgs5 <- createCreateSccsIntervalDataArgs(   eraCovariateSettings = list(     covarExposureOfInt,     covarPreExp,     covarProphylactics   ),   eventDependentObservation = TRUE )  sccsAnalysis5 <- createSccsAnalysis(   analysisId = 5,   description = \"Adjusting for event-dependent obs. end\",   getDbSccsDataArgs = getDbSccsDataArgs,   createStudyPopulationArgs = createStudyPopulationArgs,   createIntervalDataArgs = createSccsIntervalDataArgs5,   fitSccsModelArgs = fitSccsModelArgs ) sccsAnalysisList <- list(   sccsAnalysis1,   sccsAnalysis2,   sccsAnalysis3,   sccsAnalysis4,   sccsAnalysis5 ) sccsAnalysesSpecifications <- createSccsAnalysesSpecifications(   sccsAnalysisList = sccsAnalysisList,   exposuresOutcomeList = exposuresOutcomeList,   controlType = \"exposure\" )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"executing-multiple-analyses","dir":"Articles","previous_headings":"","what":"Executing multiple analyses","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"can now run specified analyses using runSccsAnalyses() function: code , first specify many parallel threads SelfControlledCaseSeries can use. Many computations can computed parallel, providing one CPU core can greatly speed computation. specify SelfControlledCaseSeries can use one CPU cores detected system (using parallel::detectCores() function). call runSccsAnalyses, providing arguments connecting database, schemas tables use, well analyses hypotheses interest. outputFolder specifies outcome models intermediate files written. example use negative control exposures, must explicitly specify controlType = \"exposure\". cause different negative control exposure-outcome pairs used outcome.","code":"multiThreadingSettings <- createDefaultSccsMultiThreadingSettings(   parallel::detectCores() - 1 )  referenceTable <- runSccsAnalyses(   connectionDetails = connectionDetails,   cdmDatabaseSchema = cdmDatabaseSchema,   exposureDatabaseSchema = cdmDatabaseSchema,   exposureTable = \"drug_era\",   outcomeDatabaseSchema = cohortDatabaseSchema,   outcomeTable = cohortTable,   outputFolder = outputFolder,   sccsMultiThreadingSettings = multiThreadingSettings,   sccsAnalysesSpecifications = sccsAnalysesSpecifications )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"restarting","dir":"Articles","previous_headings":"Executing multiple analyses","what":"Restarting","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"reason execution interrupted, can restart re-issuing runSccsAnalyses() command. intermediate final products already completed written disk skipped.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"retrieving-the-results","dir":"Articles","previous_headings":"","what":"Retrieving the results","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"result runSccsAnalyses() data frame one row per exposures-outcome-analysis combination, one row per fitted SCCS model. provides file names intermediate end-result files constructed. example, can retrieve fitted model combination drug interest, outcome, first analysis: Note file names appear several times table. example analysis share sccsData object. can always retrieve file reference table using getFileReference() function: can get summary results using getResultsSummary(): tells us, per exposure-outcome-analysis combination (possible multiple rows per SCCS model) estimated relative risk 95% confidence interval, well number subjects (cases) number events observed subjects. covariates included summary marked exposureOfInterest = TRUE calling createEraCovariateSettings() earlier.","code":"sccsModelFile <- referenceTable$sccsModelFile[result$exposureId == diclofenac &                                                 referenceTable$outcomeId == giBleed &                                                 referenceTable$analysisId == 1] sccsModel <- readRDS(file.path(outputFolder, sccsModelFile)) sccsModel ## SccsModel object ##  ## Outcome ID: 77 ##  ## Outcome count: ##    outcomeSubjects outcomeEvents outcomeObsPeriods observedDays ## 77           88644        162059             88874    187523199 ##  ## Estimates: ## # A tibble: 2 × 7 ##   Name                         ID Estimate LB95CI UB95CI LogRr SeLogRr ##   <chr>                     <dbl>    <dbl>  <dbl>  <dbl> <dbl>   <dbl> ## 1 End of observation period    99     2.14   2.09   2.19 0.760  0.0112 ## 2 Exposure of interest       1000     1.22   1.15   1.30 0.200  0.0317 referenceTable <- getFileReference(outputFolder) resultsSum <- getResultsSummary(outputFolder) head(resultsSum) ## # A tibble: 6 × 32 ##   exposuresOutcomeSetId nestingCohortId outcomeId analysisId covariateAnalysisId ##                   <dbl>           <dbl>     <dbl>      <int>               <dbl> ## 1            1480556481              NA        77          1                   1 ## 2            1039014262              NA        77          1                   1 ## 3           -1616427546              NA        77          1                   1 ## 4           -1774200863              NA        77          1                   1 ## 5            -612981155              NA        77          1                   1 ## 6           -1166912124              NA        77          1                   1 ## # ℹ 27 more variables: covariateId <dbl>, covariateName <chr>, eraId <dbl>, ## #   trueEffectSize <int>, outcomeSubjects <dbl>, outcomeEvents <dbl>, ## #   outcomeObservationPeriods <dbl>, observedDays <dbl>, ## #   covariateSubjects <dbl>, covariateDays <dbl>, covariateEras <dbl>, ## #   covariateOutcomes <dbl>, rr <dbl>, ci95Lb <dbl>, ci95Ub <dbl>, p <dbl>, ## #   oneSidedP <dbl>, logRr <dbl>, seLogRr <dbl>, llr <dbl>, calibratedRr <dbl>, ## #   calibratedCi95Lb <dbl>, calibratedCi95Ub <dbl>, calibratedP <dbl>, …"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"diagnostics-summary","dir":"Articles","previous_headings":"Retrieving the results","what":"Diagnostics summary","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"runSccsAnalyses() function automatically executes diagnostics major assumptions SCCS design. can view summary diagnostics results: diagnostics, summary reports whether analysis failed passed diagnostic. thresholds used can specified createSccsAnalysesSpecifications() function.","code":"diagnosticsSum <- getDiagnosticsSummary(outputFolder) head(diagnosticsSum) ## # A tibble: 6 × 24 ##   exposuresOutcomeSetId nestingCohortId outcomeId analysisId covariateAnalysisId ##                   <dbl>           <dbl>     <dbl>      <int>               <dbl> ## 1            1480556481              NA        77          1                   1 ## 2            1039014262              NA        77          1                   1 ## 3           -1616427546              NA        77          1                   1 ## 4           -1774200863              NA        77          1                   1 ## 5            -612981155              NA        77          1                   1 ## 6           -1166912124              NA        77          1                   1 ## # ℹ 19 more variables: covariateId <dbl>, covariateName <chr>, eraId <dbl>, ## #   timeStabilityP <dbl>, timeStabilityDiagnostic <chr>, eventExposureLb <dbl>, ## #   eventExposureUb <dbl>, eventExposureDiagnostic <chr>, ## #   eventObservationLb <dbl>, eventObservationUb <dbl>, ## #   eventObservationDiagnostic <chr>, rareOutcomePrevalence <dbl>, ## #   rareOutcomeDiagnostic <chr>, mdrr <dbl>, mdrrDiagnostic <chr>, ease <dbl>, ## #   easeDiagnostic <chr>, unblind <lgl>, unblindForEvidenceSynthesis <lgl>"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"negative-control-distribution","dir":"Articles","previous_headings":"Retrieving the results","what":"Negative control distribution","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"Now produced estimates outcomes including negative controls, can look distribution negative controls. plot, blue dots represent negative control exposures, yellow diamond represents exposure interest: diclofenac. unbiased, well-calibrated analysis 95% negative controls dashed lines (ie. 95% p > .05). Note empirical calibration already automatically performed, calibrated confidence intervals p-values included separately analyses summary. viewing estimates, remove fail one diagnostics. first analysis, means none estimates remain: true analysis 2: start include corrections season calendar time pass diagnostics:   using adjustment event-dependent observation end pass diagnostics exposure-outcome pair:","code":"install.packages(\"EmpiricalCalibration\") library(EmpiricalCalibration)  # Analysis 1: Simplest model analysis1Estimates <-  resultsSum |>   inner_join(diagnosticsSum) |>   filter(analysisId == 1 & unblind == 1)  nrow(analysis1Estimates) ## [1] 0 # Analysis 2: Including prophylactics and pre-exposure   analysis2Estimates <-  resultsSum |>     inner_join(diagnosticsSum) |>     filter(analysisId == 2 & unblind == 1)      nrow(analysis2Estimates) ) ## [1] 0 # Analysis 3: Including prophylactics, season, calendar time, and pre-exposure   analysis3Estimates <-  resultsSum |>     inner_join(diagnosticsSum) |>     filter(analysisId == 3 & unblind == 1)      negCons <- analysis3Estimates |>     filter(eraId != diclofenac)   ei <- negCons <- analysis3Estimates |>     filter(eraId == diclofenac)   plotCalibrationEffect(     logRrNegatives = negCons$logRr,     seLogRrNegatives = negCons$seLogRr,     logRrPositives = ei$logRr,     seLogRrPositives = ei$seLogRr   ) # Analysis 4: Including all other drugs negCons <- resultsSum[resultsSum$analysisId == 4 & resultsSum$eraId != diclofenac, ] ei <- resultsSum[resultsSum$analysisId == 4 & resultsSum$eraId == diclofenac, ] null <- fitNull(   negCons$logRr,   negCons$seLogRr ) plotCalibrationEffect(   logRrNegatives = negCons$logRr,   seLogRrNegatives = negCons$seLogRr,   logRrPositives = ei$logRr,   seLogRrPositives = ei$seLogRr,   null ) # Analysis 5: Adjusting for event-dependent obs. end nrow(analysis5Estimates) ## [1] 0"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/MultipleAnalyses.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Running multiple analyses at once using the SelfControlledCaseSeries package","text":"Considerable work dedicated provide SelfControlledCaseSeries package. , SelfControlledCaseSeries makes extensive use Cyclops package. work supported part National Science Foundation grant IIS 1251151.","code":"citation(\"SelfControlledCaseSeries\") ## To cite package 'SelfControlledCaseSeries' in publications use: ##  ##   Schuemie M, Ryan P, Shaddox T, Suchard M (2025). ##   _SelfControlledCaseSeries: Self-Controlled Case Series_. R package ##   version 6.0.0, https://github.com/OHDSI/SelfControlledCaseSeries, ##   <https://ohdsi.github.io/SelfControlledCaseSeries/>. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Manual{, ##     title = {SelfControlledCaseSeries: Self-Controlled Case Series}, ##     author = {Martijn Schuemie and Patrick Ryan and Trevor Shaddox and Marc Suchard}, ##     year = {2025}, ##     note = {R package version 6.0.0,  ## https://github.com/OHDSI/SelfControlledCaseSeries}, ##     url = {https://ohdsi.github.io/SelfControlledCaseSeries/}, ##   } citation(\"Cyclops\") ## To cite Cyclops in publications use: ##  ##   Suchard MA, Simpson SE, Zorych I, Ryan P, Madigan D (2013). \"Massive ##   parallelization of serial inference algorithms for complex ##   generalized linear models.\" _ACM Transactions on Modeling and ##   Computer Simulation_, *23*, 10. doi:10.1145/2414416.2414791 ##   <https://doi.org/10.1145/2414416.2414791>. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Article{, ##     author = {M. A. Suchard and S. E. Simpson and I. Zorych and P. Ryan and D. Madigan}, ##     title = {Massive parallelization of serial inference algorithms for complex generalized linear models}, ##     journal = {ACM Transactions on Modeling and Computer Simulation}, ##     volume = {23}, ##     pages = {10}, ##     year = {2013}, ##     doi = {10.1145/2414416.2414791}, ##   }"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/ResultsSchema.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Results schema of the SelfControlledCaseSeries package","text":"document describes data model output SelfControlledCaseSeries (SCCS) package, generated exportToCsv() function. vignette assumes already familiar SelfControlledCaseSeries package, read vignettes.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/ResultsSchema.html","id":"exposures-covariates-of-interest-and-controls","dir":"Articles","previous_headings":"Introduction","what":"Exposures, covariates of interest, and controls","title":"Results schema of the SelfControlledCaseSeries package","text":"described ‘Single studies using SelfControlledCaseSeries package’ vignette, eras cohorts drug eras extracted database. Covariates can either splines, example representing age season, era covariates, derived eras. defining covariates using createEraCovariateSettings() function can either use verbatim era IDs (e.g. cohort IDs), can reference variable (typically called ‘exposureId’). defining exposures using exposure() function, can define different era IDs used variable, thereby using analysis settings different exposures outcomes. exposure can set trueEffectSize known. exposure known true effect size considered control, used empirical calibration. covariates can marked covariates interest setting exposureOfInterest = TRUE calling createEraCovariateSettings(). especially relevant results model, since covariates reported sccs_result table.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/ResultsSchema.html","id":"exposures-outcome-sets-analysis-ids-and-models","dir":"Articles","previous_headings":"Introduction","what":"Exposures-outcome-sets, analysis IDs and models","title":"Results schema of the SelfControlledCaseSeries package","text":"Using createExposuresOutcome() function can define outcome one exposures, since SCCS model can multiple exposures (e.g. separte exposures first second dose vaccine). createSccsAnalysis() function can create set settings analysis describing data extract database, transform data including covariates construct, fit SCCS model. analysis setting unique analysis ID. combination exposures-outcome-set analysis setting correspond one SCCS model. model can multiple covariates, covariates can based multiple eras.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/ResultsSchema.html","id":"fields-with-minimum-values","dir":"Articles","previous_headings":"Introduction","what":"Fields with minimum values","title":"Results schema of the SelfControlledCaseSeries package","text":"fields contain patient counts fractions can easily converted patient counts. prevent identifiability, fields subject minimum value. value falls minimum, replaced negative value minimum. example, minimum subject count 5, actual count 2, value stored data model -5, represented ‘<5’ user. Note value 0 permissible, identifies persons. fields identified Min. count = ‘Yes’.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/ResultsSchema.html","id":"tables","dir":"Articles","previous_headings":"","what":"Tables","title":"Results schema of the SelfControlledCaseSeries package","text":"section find list tables fields.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Single studies using the SelfControlledCaseSeries package","text":"vignette describes can use SelfControlledCaseSeries package perform single Self-Controlled Case Series (SCCS) study. walk steps needed perform exemplar study, selected well-studied topic effect aspirin epistaxis.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"terminology","dir":"Articles","previous_headings":"Introduction","what":"Terminology","title":"Single studies using the SelfControlledCaseSeries package","text":"following terms used consistently throughout package: Case: period continuous observation person containing one outcomes. One person can contribute multiple cases, example person multiple observation periods. Observation period: time person observed database, e.g. time enrolled insurance plan. Nesting cohort: cohort defining persons eligible included cases. typically indication drug. example, drug treats diabetes, may want nest analysis time people diabetes avoid (time-varying) confounding indication. Study period: period calendar time persons eligible included cases. example, study period January 1, 2020, onward. Unlike nesting cohorts, specify different time periods per person, study period applies persons. Naive period: first part person’s observation period (e.g. first 180 days). typically removed SCCS model avoid exposure incident outcome misclassification. example, observe outcome second day person’s observation period, know whether outcome new one just follow-old one, whether patient may started exposure just prior observation start without us knowing . Study population: set cases specific outcome, meet certain criteria, naive period age restrictions. Era: data element extracted database denoting time period patient (case). can cohort, also drug era. SCCS data: data object containing information cases, observation periods, nesting cohorts, eras. Covariate: time-varying variable used predictor outcome SCCS model. include splines era covariates. Era covariate: covariate derived era. Multiple covariates can derived single era (e.g. covariate drug, covariate pre-exposure time prior drug). One covariate can derived multiple eras (e.g. one covariate can represent class drugs). SCCS interval data: data cases chopped intervals covariates constant value. splines (e.g season), effect assumed constant within calendar month. SCCS model: Poisson regression SCCS interval data, condition observation period.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"installation-instructions","dir":"Articles","previous_headings":"","what":"Installation instructions","title":"Single studies using the SelfControlledCaseSeries package","text":"installing SelfControlledCaseSeries package make sure Java available. Windows users, RTools also necessary. See instructions properly configuring R environment. SelfControlledCaseSeries package maintained Github repository, can downloaded installed within R using remotes package: installed, can type library(SelfControlledCaseSeries) load package.","code":"install.packages(\"remotes\") library(remotes) install_github(\"ohdsi/SelfControlledCaseSeries\")"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Single studies using the SelfControlledCaseSeries package","text":"SelfControlledCaseSeries package study requires least three steps: Loading necessary data database. Transforming data format suitable SCCS study. step can broken multiple tasks: Defining study population, people specific outcome, possible restrictions age. Creating covariates based variables extracted database, defining risk windows based exposures. Transforming data non-overlapping time intervals, information various covariates outcomes per interval. Fitting model using conditional Poisson regression. following sections steps demonstrated increasingly complex studies.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"configuring-the-connection-to-the-server","dir":"Articles","previous_headings":"Studies with a single drug","what":"Configuring the connection to the server","title":"Single studies using the SelfControlledCaseSeries package","text":"need tell R connect server data . SelfControlledCaseSeries uses DatabaseConnector package, provides createConnectionDetails function. Type ?createConnectionDetails specific settings required various database management systems (DBMS). example, one might connect PostgreSQL database using code: last lines define cdmDatabaseSchema, cohortDatabaseSchema, cohortTable variables. ’ll use later tell R data CDM format live, stored cohorts interest, version CDM used. Note Microsoft SQL Server, databaseSchemas need specify database schema, example cdmDatabaseSchema <- \"my_cdm_data.dbo\". database platforms support temp tables, Oracle, also necessary provide schema user write access can used emulate temp tables. PostgreSQL supports temp tables, can set options(sqlRenderTempEmulationSchema = NULL) (set sqlRenderTempEmulationSchema .)","code":"connectionDetails <- createConnectionDetails(dbms = \"postgresql\",                                               server = \"localhost/ohdsi\",                                               user = \"joe\",                                               password = \"supersecret\")  cdmDatabaseSchema <- \"my_cdm_data\" cohortDatabaseSchema <- \"my_results\" cohortTable <- \"my_cohorts\" options(sqlRenderTempEmulationSchema = NULL)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"preparing-the-exposure-and-outcome-of-interest","dir":"Articles","previous_headings":"Studies with a single drug","what":"Preparing the exposure and outcome of interest","title":"Single studies using the SelfControlledCaseSeries package","text":"need define exposure outcome study. exposure, directly use drug_era table CDM. outcome can use OHDSI PhenotypeLibrary package retrieve community-approved definition epistaxis: can use CohortGenerator package instantiate cohort:","code":"epistaxis <- 356 cohortDefinitionSet <- PhenotypeLibrary::getPlCohortDefinitionSet(epistaxis) connection <- DatabaseConnector::connect(connectionDetails) cohortTableNames <- CohortGenerator::getCohortTableNames(cohortTable) CohortGenerator::createCohortTables(connection = connection,                                     cohortDatabaseSchema = cohortDatabaseSchema,                                     cohortTableNames = cohortTableNames) counts <- CohortGenerator::generateCohortSet(connection = connection,                                              cdmDatabaseSchema = cdmDatabaseSchema,                                              cohortDatabaseSchema = cohortDatabaseSchema,                                              cohortTableNames = cohortTableNames,                                              cohortDefinitionSet = cohortDefinitionSet) DatabaseConnector::disconnect(connection)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"extracting-the-data-from-the-server","dir":"Articles","previous_headings":"Studies with a single drug","what":"Extracting the data from the server","title":"Single studies using the SelfControlledCaseSeries package","text":"Now can tell SelfControlledCaseSeries extract necessary data analysis: many parameters, documented SelfControlledCaseSeries manual. short, pointing function table created earlier indicating cohort ID table identifies outcome. Note possible fetch data multiple outcomes . point function drug_era table, specify concept ID exposure interest: aspirin. , note also possible fetch data multiple drugs . fact, specify exposure IDs function retrieve data drugs found drug_era table. data patients, outcomes exposures extracted server stored sccsData object. object uses Andromeda package store information way ensures R run memory, even data large. can use generic summary() function view information data extracted:","code":"aspirin <- 1112807  sccsData <- getDbSccsData(   connectionDetails = connectionDetails,   cdmDatabaseSchema = cdmDatabaseSchema,   outcomeDatabaseSchema = cohortDatabaseSchema,   outcomeTable = cohortTable,   outcomeIds = epistaxis,   exposureDatabaseSchema = cdmDatabaseSchema,   exposureTable = \"drug_era\",   getDbSccsDataArgs = createGetDbSccsDataArgs(     studyStartDates = \"20100101\",     studyEndDates = \"21000101\",     maxCasesPerOutcome = 100000,     exposureIds = aspirin   ) ) sccsData ## # SccsData object ##  ## Exposure cohort ID(s): 1112807 ## Outcome cohort ID(s): 356 ##  ## Inherits from Andromeda: ## # Andromeda object ## # Physical location:  E:\\andromedaTemp\\file2fb04712e5e.duckdb ##  ## Tables: ## $cases (observationPeriodId, caseId, personId, noninformativeEndCensor, observationPeriodStartDate, startDay, endDay, ageAtObsStart, genderConceptId) ## $eraRef (eraType, eraId, eraName, minObservedDate, maxObservedDate) ## $eras (eraType, caseId, eraId, eraValue, eraStartDay, eraEndDay) summary(sccsData) ## SccsData object summary ##  ## Exposure cohort ID(s): 1112807 ## Outcome cohort ID(s): 356 ##  ## Outcome counts: ##     Outcome Subjects Outcome Events Outcome Observation Periods ## 356            99202         160949                       1e+05 ##  ## Eras: ## Number of era types: 2 ## Number of eras: 169627"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"saving-the-data-to-file","dir":"Articles","previous_headings":"Studies with a single drug > Extracting the data from the server","what":"Saving the data to file","title":"Single studies using the SelfControlledCaseSeries package","text":"Creating sccsData file can take considerable computing time, probably good idea save future sessions. sccsData uses Andromeda, use R’s regular save function. Instead, ’ll use saveSccsData() function: can use loadSccsData() function load data future session.","code":"saveSccsData(sccsData, \"sccsData.zip\")"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"creating-the-study-population","dir":"Articles","previous_headings":"Studies with a single drug","what":"Creating the study population","title":"Single studies using the SelfControlledCaseSeries package","text":"data fetched server can now define population wish study. retrieved data multiple outcomes, now select one, possibly impose restrictions: specify wish study outcome ID stored epistaxis. Since outcome fetched data, also skipped argument. furthermore specify first 180 days observation every person, -called ‘naive period’, excluded analysis. Note data naive period used determine exposure status start follow-(end naive period). also specify use occurrences outcome, just first one per person. can find many people () removed restrictions imposed:","code":"studyPop <- createStudyPopulation(   sccsData = sccsData,   outcomeId = epistaxis,   createStudyPopulationArgs = createCreateStudyPopulationArgs(     firstOutcomeOnly = FALSE,     naivePeriod = 180   ) ) getAttritionTable(studyPop) ##   outcomeId outcomeSubjects outcomeEvents outcomeObsPeriods observedDays ## 1       356          325890        507256            331800   1211954076 ## 2       356          207698        323114            211321    573067241 ## 3       356           99202        160949            100000    285343718 ## 4       356           87836        135825             88453    240007225 ##                       description ## 1         All outcome occurrences ## 2     Outcomes in study period(s) ## 3                   Random sample ## 4 Requiring 180 days naive period"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"defining-a-simple-model","dir":"Articles","previous_headings":"Studies with a single drug","what":"Defining a simple model","title":"Single studies using the SelfControlledCaseSeries package","text":"Next, can use data define simple model fit: example, use createEraCovariateSettings() function define single covariate: exposure aspirin. specify risk window start exposure end setting start end 0, defining anchor end era end, drug eras end exposure. use covariate definition createSccsIntervalData() function generate sccsIntervalData. represents data non-overlapping time intervals, information various covariates outcomes per interval.","code":"covarAspirin <- createEraCovariateSettings(   label = \"Exposure of interest\",   includeEraIds = aspirin,   start = 0,   end = 0,   endAnchor = \"era end\" )  sccsIntervalData <- createSccsIntervalData(   studyPopulation = studyPop,   sccsData,   createSccsIntervalDataArgs =  createCreateSccsIntervalDataArgs(     eraCovariateSettings = covarAspirin   ) )  summary(sccsIntervalData) ## SccsIntervalData object summary ##  ## Outcome cohort ID: 356 ##  ## Number of cases (observation periods): 88451 ## Number of eras (spans of time): 180752 ## Number of outcomes: 135823 ## Number of covariates: 2 ## Number of non-zero covariate values: 93011"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"model-fitting","dir":"Articles","previous_headings":"Studies with a single drug","what":"Model fitting","title":"Single studies using the SelfControlledCaseSeries package","text":"fitSccsModel function used fit model: can inspect resulting model: tells us estimated relative risk (incidence rate ratio) exposure aspirin compared non-exposed time.","code":"model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() ) model ## SccsModel object ##  ## Outcome ID: 356 ##  ## Outcome count: ##     outcomeSubjects outcomeEvents outcomeObsPeriods observedDays ## 356           87834        135823             88451    148669525 ##  ## Estimates: ## # A tibble: 2 × 7 ##   Name                         ID Estimate LB95CI UB95CI  LogRr SeLogRr ##   <chr>                     <dbl>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl> ## 1 End of observation period    99     1.05   1.01   1.08 0.0441  0.0166 ## 2 Exposure of interest       1000     1.38   1.27   1.51 0.324   0.0439"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"adding-a-pre-exposure-window","dir":"Articles","previous_headings":"Studies with a single drug","what":"Adding a pre-exposure window","title":"Single studies using the SelfControlledCaseSeries package","text":"One key assumption SCCS design outcome change subsequent probability exposure. case, assumption may violated, doctors may hesitate prescribe aspirin someone prone bleeding. ensure affect analysis, must include window prior exposure. can test whether rate outcome increased decreased pre-exposure window. exposure hasn’t occurred yet, cause change risk. observed change must therefore due , possibly confounding factors. add 30-day pre-exposure window: created new covariate definition addition first one. define risk window start 60 days prior exposure, end day just prior exposure. designate covariate preExposure = TRUE, meaning used pre-exposure diagnostic evaluating assumption event subsequent exposure independent. combine two covariate settings list createSccsIntervalData function. , can take look results:","code":"covarPreAspirin <- createEraCovariateSettings(   label = \"Pre-exposure\",   includeEraIds = aspirin,   start = -30,   end = -1,   endAnchor = \"era start\",   preExposure = TRUE )  sccsIntervalData <- createSccsIntervalData(   studyPopulation = studyPop,   sccsData,   createSccsIntervalDataArgs = createCreateSccsIntervalDataArgs(     eraCovariateSettings = list(covarAspirin, covarPreAspirin)   ) ) model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() ) model ## SccsModel object ##  ## Outcome ID: 356 ##  ## Outcome count: ##     outcomeSubjects outcomeEvents outcomeObsPeriods observedDays ## 356           87834        135823             88451    148669525 ##  ## Estimates: ## # A tibble: 3 × 7 ##   Name                         ID Estimate LB95CI UB95CI  LogRr SeLogRr ##   <chr>                     <dbl>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl> ## 1 End of observation period    99     1.05   1.01   1.08 0.0448  0.0165 ## 2 Exposure of interest       1000     1.44   1.32   1.57 0.363   0.0441 ## 3 Pre-exposure               1001     1.37   1.23   1.52 0.312   0.0547"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"including-seasonality-and-calendar-time","dir":"Articles","previous_headings":"Studies with a single drug","what":"Including seasonality, and calendar time","title":"Single studies using the SelfControlledCaseSeries package","text":"Often rate exposure outcome change age, can even depend season calendar time general (e.g. rates may higher 2021 compared 2020). may lead confounding may bias estimates. correct can include age, season, /calendar time model. computational reasons assume effect age, season, calendar time constant within calendar month. assume rate one month next can different, also assume subsequent months somewhat similar rates. implemented using spline functions. Figure 1. Example spline used seasonality: within month, risk attributable seasonality assumed constant, month month risks assumed follow cyclic quadratic spline. Note default people outcome used estimate effect age, seasonality, calendar time outcome, just people exposed drug interest. Adjusting age typically makes sense small children, small difference age can still make big difference (remember: modeling effect age person , effect age across persons). Since age calendar time often hard fit simultaneously, often best model seasonality calendar time, like : , can inspect model: see estimates exposed pre-exposure time changes much. can plot spline curves season, calendar time learn :   see effect season: epistaxis tends prevalent winter. verify model accounts time trends, plotting observed expected rate outcome across time, adjustment:  see adjustment, general, rate outcome appears fairly stable across time, exception months 2020. refer ‘COVID-blip’, time COVID-19 pandemic regular healthcare put hold.","code":"seasonalityCovariateSettings <- createSeasonalityCovariateSettings()  calendarTimeSettings <- createCalendarTimeCovariateSettings()  sccsIntervalData <- createSccsIntervalData(   studyPopulation = studyPop,   sccsData = sccsData,   createSccsIntervalDataArgs = createCreateSccsIntervalDataArgs(     eraCovariateSettings = list(covarAspirin,                                 covarPreAspirin),     seasonalityCovariateSettings = seasonalityCovariateSettings,     calendarTimeCovariateSettings = calendarTimeSettings   ) )  model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() ) model ## SccsModel object ##  ## Outcome ID: 356 ##  ## Outcome count: ##     outcomeSubjects outcomeEvents outcomeObsPeriods observedDays ## 356           13265         20611             13284     23509810 ##  ## Estimates: ## # A tibble: 12 × 7 ##    Name                                ID Estimate LB95CI UB95CI   LogRr SeLogRr ##    <chr>                            <dbl>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl> ##  1 End of observation period           99    0.837  0.767  0.912 -0.178   0.0441 ##  2 Seasonality spline component 1     200    1.37  NA     NA      0.314  NA      ##  3 Seasonality spline component 2     201    1.59  NA     NA      0.466  NA      ##  4 Seasonality spline component 3     202    1.24  NA     NA      0.218  NA      ##  5 Seasonality spline component 4     203    0.801 NA     NA     -0.222  NA      ##  6 Calendar time spline component 1   300    1.07  NA     NA      0.0656 NA      ##  7 Calendar time spline component 2   301    1.51  NA     NA      0.415  NA      ##  8 Calendar time spline component 3   302    2.14  NA     NA      0.760  NA      ##  9 Calendar time spline component 4   303    2.85  NA     NA      1.05   NA      ## 10 Calendar time spline component 5   304    3.20  NA     NA      1.16   NA      ## 11 Exposure of interest              1000    1.39   1.27   1.51   0.326   0.0442 ## 12 Pre-exposure                      1001    1.33   1.19   1.47   0.282   0.0546 plotSeasonality(model) plotCalendarTimeEffect(model) plotEventToCalendarTime(studyPopulation = studyPop,                         sccsModel = model)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"removing-the-covid-blip","dir":"Articles","previous_headings":"Studies with a single drug","what":"Removing the COVID blip","title":"Single studies using the SelfControlledCaseSeries package","text":"discontinuity rate outcome COVID pandemic cause bias. reason probably best remove time analysis altogether. can achieve defining two separate study periods: plot outcomes time, see entire time COVID pandemic removed:","code":"sccsData <- getDbSccsData(   connectionDetails = connectionDetails,   cdmDatabaseSchema = cdmDatabaseSchema,   outcomeDatabaseSchema = cohortDatabaseSchema,   outcomeTable = cohortTable,   outcomeIds = epistaxis,   exposureDatabaseSchema = cdmDatabaseSchema,   exposureTable = \"drug_era\",   getDbSccsDataArgs = createGetDbSccsDataArgs(     exposureIds = aspirin,     maxCasesPerOutcome = 100000,     studyStartDates = c(\"20100101\", \"20220101\"),     studyEndDates = c(\"20191231\", \"21001231\")   ) ) studyPop <- createStudyPopulation(   sccsData = sccsData,   outcomeId = epistaxis,   createStudyPopulationArgs = createCreateStudyPopulationArgs(     firstOutcomeOnly = FALSE,     naivePeriod = 180   ) ) sccsIntervalData <- createSccsIntervalData(   studyPopulation = studyPop,   sccsData = sccsData,   createSccsIntervalDataArgs = createCreateSccsIntervalDataArgs(     eraCovariateSettings = list(covarAspirin,                                 covarPreAspirin),     seasonalityCovariateSettings = seasonalityCovariateSettings,     calendarTimeCovariateSettings = calendarTimeSettings   ) ) model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() ) plotEventToCalendarTime(studyPopulation = studyPop,                         sccsModel = model)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"considering-event-dependent-observation-time","dir":"Articles","previous_headings":"Studies with a single drug","what":"Considering event-dependent observation time","title":"Single studies using the SelfControlledCaseSeries package","text":"SCCS method requires observation periods independent outcome times. requirement violated outcomes increase mortality rate, since censoring observation periods event-dependent. modification SCCS proposed attempts correct . First, several models fitted estimate amount shape event-dependent censoring, best fitting model selected. Next, model used reweigh various parts observation time. approach also implemented package, can turned using eventDependentObservation argument createSccsIntervalData function. However, method proven somewhat unstable combinations corrections, now best keep model simple: , can inspect model:","code":"sccsIntervalData <- createSccsIntervalData(   studyPopulation = studyPop,   sccsData = sccsData,   createSccsIntervalDataArgs = createCreateSccsIntervalDataArgs(     eraCovariateSettings = list(covarAspirin,                                 covarPreAspirin),     eventDependentObservation = TRUE) )  model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() ) model ## SccsModel object ##  ## Outcome ID: 356 ##  ## Outcome count: ##     outcomeSubjects outcomeEvents outcomeObsPeriods observedDays ## 356           34266         53069             34387     10666039 ##  ## Estimates: ## # A tibble: 3 × 7 ##   Name                         ID Estimate LB95CI UB95CI  LogRr SeLogRr ##   <chr>                     <dbl>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl> ## 1 End of observation period    99    0.580  0.562  0.599 -0.544  0.0163 ## 2 Exposure of interest       1000    1.40   1.17   1.68   0.340  0.0910 ## 3 Pre-exposure               1001    1.24   0.983  1.55   0.217  0.117"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"studies-with-more-than-one-drug","dir":"Articles","previous_headings":"","what":"Studies with more than one drug","title":"Single studies using the SelfControlledCaseSeries package","text":"Although usually interested effect single drug drug class, beneficial add exposure drugs analysis believe drugs represent time-varying confounders wish correct .","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"adding-a-class-of-drugs","dir":"Articles","previous_headings":"Studies with more than one drug","what":"Adding a class of drugs","title":"Single studies using the SelfControlledCaseSeries package","text":"example, SSRIs might also cause epistaxis, aspirin co-prescribed SSRIs don’t want effect SSRIs attributed aspirin. like estimate represent just effect aspirin, need keep effect SSRIs separate. First retrieve information SSRI exposure database: retrieved, can use data build fit model: , added new covariate based list concept IDs various SSRIs. example set stratifyById FALSE, meaning estimate single incidence rate ratio SSRIs, one estimate entire class drugs. Note duplicates removed: person exposed two SSRIs day, counted fitting model. , can inspect model:","code":"ssris <- c(715939, 722031, 739138, 751412, 755695, 797617, 40799195) sccsData <- getDbSccsData(   connectionDetails = connectionDetails,   cdmDatabaseSchema = cdmDatabaseSchema,   outcomeDatabaseSchema = cohortDatabaseSchema,   outcomeTable = cohortTable,   outcomeIds = epistaxis,   exposureDatabaseSchema = cdmDatabaseSchema,   exposureTable = \"drug_era\",   getDbSccsDataArgs = createGetDbSccsDataArgs(     maxCasesPerOutcome = 100000,     exposureIds = c(aspirin, ssris),     studyStartDates = c(\"20100101\", \"20220101\"),     studyEndDates = c(\"20191231\", \"21001231\")   ) ) sccsData ## # SccsData object ##  ## Exposure cohort ID(s): 1112807,715939,722031,739138,751412,755695,797617,40799195 ## Outcome cohort ID(s): 356 ##  ## Inherits from Andromeda: ## # Andromeda object ## # Physical location:  E:\\andromedaTemp\\file2fb03e6951b3.duckdb ##  ## Tables: ## $cases (observationPeriodId, caseId, personId, noninformativeEndCensor, observationPeriodStartDate, startDay, endDay, ageAtObsStart, genderConceptId) ## $eraRef (eraType, eraId, eraName, minObservedDate, maxObservedDate) ## $eras (eraType, caseId, eraId, eraValue, eraStartDay, eraEndDay) studyPop <- createStudyPopulation(   sccsData = sccsData,   outcomeId = epistaxis,   createStudyPopulationArgs = createCreateStudyPopulationArgs(     firstOutcomeOnly = FALSE,     naivePeriod = 180   ) ) covarSsris <- createEraCovariateSettings(label = \"SSRIs\",                                          includeEraIds = ssris,                                          stratifyById = FALSE,                                          start = 1,                                          end = 0,                                          endAnchor = \"era end\") sccsIntervalData <- createSccsIntervalData(   studyPopulation = studyPop,   sccsData = sccsData,   createSccsIntervalDataArgs = createCreateSccsIntervalDataArgs(     eraCovariateSettings = list(covarAspirin,                                 covarPreAspirin,                                 covarSsris),     seasonalityCovariateSettings = seasonalityCovariateSettings,     calendarTimeCovariateSettings = calendarTimeSettings   ) )  model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() ) model ## SccsModel object ##  ## Outcome ID: 356 ##  ## Outcome count: ##     outcomeSubjects outcomeEvents outcomeObsPeriods observedDays ## 356           30912         47101             31005     52326829 ##  ## Estimates: ## # A tibble: 14 × 7 ##    Name                                ID Estimate LB95CI UB95CI   LogRr SeLogRr ##    <chr>                            <dbl>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl> ##  1 End of observation period           99    0.824  0.778  0.873 -0.193   0.0292 ##  2 Seasonality spline component 1     200    1.36  NA     NA      0.306  NA      ##  3 Seasonality spline component 2     201    1.62  NA     NA      0.484  NA      ##  4 Seasonality spline component 3     202    1.19  NA     NA      0.170  NA      ##  5 Seasonality spline component 4     203    0.830 NA     NA     -0.186  NA      ##  6 Calendar time spline component 1   300    1.04  NA     NA      0.0357 NA      ##  7 Calendar time spline component 2   301    1.32  NA     NA      0.278  NA      ##  8 Calendar time spline component 3   302    1.74  NA     NA      0.555  NA      ##  9 Calendar time spline component 4   303    2.04  NA     NA      0.714  NA      ## 10 Calendar time spline component 5   304    2.58  NA     NA      0.946  NA      ## 11 Calendar time spline component 6   305    1.04  NA     NA      0.0422 NA      ## 12 Exposure of interest              1000    1.34   1.23   1.46   0.292   0.0435 ## 13 Pre-exposure                      1001    1.28   1.16   1.42   0.251   0.0534 ## 14 SSRIs                             1002    1.03   0.994  1.06   0.0259  0.0163"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"adding-all-drugs","dir":"Articles","previous_headings":"Studies with more than one drug","what":"Adding all drugs","title":"Single studies using the SelfControlledCaseSeries package","text":"Another approach add drugs model. , first step get relevant data database: Note exposureIds argument left empty. cause data concepts exposure table retrieved. Next, simply create new set covariates, fit model: first thing note defined new covariates drugs except aspirin specifying includeEraIds setting excludeEraIds concept ID aspirin. Furthermore, specified stratifyById TRUE, meaning estimate produced drug. set allowRegularization TRUE, meaning use regularization estimates new covariate set. Regularization means impose prior distribution effect size, effectively penalizing large estimates. helps fit model, example drugs rare, drugs almost often prescribed together individual effects difficult untangle. now many estimates, export estimates data frame using getModel(): see despite extensive adjustments made model, effect estimates aspirin remained nearly . case ’re interested, can also look effect sizes SSRIs: Note used regularization, able compute confidence intervals estimates.","code":"sccsData <- getDbSccsData(   connectionDetails = connectionDetails,   cdmDatabaseSchema = cdmDatabaseSchema,   outcomeDatabaseSchema = cohortDatabaseSchema,   outcomeTable = cohortTable,   outcomeIds = epistaxis,   exposureDatabaseSchema = cdmDatabaseSchema,   exposureTable = \"drug_era\",   getDbSccsDataArgs = createGetDbSccsDataArgs(     exposureIds = c(),     maxCasesPerOutcome = 100000,     studyStartDates = c(\"19000101\", \"20220101\"),     studyEndDates = c(\"20191231\", \"21001231\")   ) ) studyPop <- createStudyPopulation(   sccsData = sccsData,   outcomeId = epistaxis,   createStudyPopulationArgs = createCreateStudyPopulationArgs(     firstOutcomeOnly = FALSE,     naivePeriod = 180   ) ) covarAllDrugs <- createEraCovariateSettings(   label = \"Other exposures\",   includeEraIds = c(),   excludeEraIds = aspirin,   stratifyById = TRUE,   start = 1,   end = 0,   endAnchor = \"era end\",   allowRegularization = TRUE ) sccsIntervalData <- createSccsIntervalData(   studyPopulation = studyPop,   sccsData = sccsData,   createSccsIntervalDataArgs = createCreateSccsIntervalDataArgs(     eraCovariateSettings = list(covarAspirin,                                 covarPreAspirin,                                 covarAllDrugs),     seasonalityCovariateSettings = seasonalityCovariateSettings,     calendarTimeCovariateSettings = calendarTimeSettings   ) ) model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() ) estimates <- getModel(model) estimates[estimates$originalEraId == aspirin, ] ## # A tibble: 2 × 10 ##   name     id estimate lb95Ci ub95Ci logRr seLogRr originalEraId originalEraType ##   <chr> <dbl>    <dbl>  <dbl>  <dbl> <dbl>   <dbl>         <dbl> <chr>           ## 1 Expo…  1000     1.31   1.17   1.47 0.270  0.0577       1112807 \"\"              ## 2 Pre-…  1001     1.31   1.17   1.47 0.271  0.0583       1112807 \"\"              ## # ℹ 1 more variable: originalEraName <chr> estimates[estimates$originalEraId %in% ssris, ] ## # A tibble: 4 × 10 ##   name                  id estimate lb95Ci ub95Ci    logRr seLogRr originalEraId ##   <chr>              <dbl>    <dbl>  <dbl>  <dbl>    <dbl>   <dbl>         <dbl> ## 1 Other exposures: …  1119    1.02      NA     NA  0.0208       NA        739138 ## 2 Other exposures: …  1868    1.02      NA     NA  0.0192       NA        755695 ## 3 Other exposures: …  2404    0.993     NA     NA -0.00738      NA        797617 ## 4 Other exposures: …  2697    0.972     NA     NA -0.0289       NA        715939 ## # ℹ 2 more variables: originalEraType <chr>, originalEraName <chr>"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"diagnostics-for-the-main-sccs-assumptions","dir":"Articles","previous_headings":"","what":"Diagnostics for the main SCCS assumptions","title":"Single studies using the SelfControlledCaseSeries package","text":"can perform several diagnostics data verify whether assumptions underlying SCCS met. four major assumptions: Occurrences event independent rare. Events within individual seldom independent serious health outcomes often increase likelihood recurrence. Restricting analyses first event avoids dependency assumes outcome rare. Occurrence event affect subsequent exposures. End observation independent occurrence outcome. Modeling assumptions correct. specifically focus whether effect time modeled correctly. SelfControlledCaseSeries package provides functions test assumptions:","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"rare-outcome-assumption-diagnostic","dir":"Articles","previous_headings":"Diagnostics for the main SCCS assumptions","what":"Rare outcome assumption diagnostic","title":"Single studies using the SelfControlledCaseSeries package","text":"Diagnostic: proportion individuals experiencing outcome less 10%. evaluate assumption, can call checkRareOutcomeAssumption() function:","code":"checkRareOutcomeAssumption(studyPop) ## # A tibble: 1 × 3 ##   outcomeProportion firstOutcomeOnly pass  ##               <dbl> <lgl>            <lgl> ## 1            0.0221 FALSE            TRUE"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"event-exposure-independence-assumption-diagnostic","dir":"Articles","previous_headings":"Diagnostics for the main SCCS assumptions","what":"Event-exposure independence assumption diagnostic","title":"Single studies using the SelfControlledCaseSeries package","text":"Diagnostic: estimated IRR pre-exposure window significantly greater 1.25 smaller 0.80. assumes created covariate pre-exposure window, vignette. Calling checkEventExposureIndependenceAssumption() extract estimate pre-exposure window, compare specified null hypothesis:","code":"checkEventExposureIndependenceAssumption(sccsModel = model) ## # A tibble: 1 × 4 ##   ratio    lb    ub pass  ##   <dbl> <dbl> <dbl> <lgl> ## 1  1.31  1.17  1.47 TRUE"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"event-observation-independence-assumption-diagnostic","dir":"Articles","previous_headings":"Diagnostics for the main SCCS assumptions","what":"Event-observation independence assumption diagnostic","title":"Single studies using the SelfControlledCaseSeries package","text":"Diagnostic: estimated IRR end--observation probe significantly greater 2.00 smaller 0.50. default, createSccsIntervalData() function adds probe window end observation period. window shows effect outcome, event-observation dependency. can check using checkEventObservationIndependenceAssumption():","code":"checkEventObservationIndependenceAssumption(sccsModel = model) ## # A tibble: 1 × 4 ##   ratio    lb    ub pass  ##   <dbl> <dbl> <dbl> <lgl> ## 1 0.903 0.873 0.935 TRUE"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"modeling-assumptions-diagnostic","dir":"Articles","previous_headings":"Diagnostics for the main SCCS assumptions","what":"Modeling assumptions diagnostic","title":"Single studies using the SelfControlledCaseSeries package","text":"Diagnostic: mean monthly absolute observed expected ratio significantly greater 1.10. assess accuracy calendar time seasonality modeling, compare expected number outcomes model observed number outcomes month. helps identify potential miscalibrations model’s ability capture temporal patterns event occurrence. , showed plotEventToCalendarTime() can used plot observed expected ratio per month, without effect spline adjustments. can also perform statistical test pre-defined threshold verify meet assumption:","code":"checkTimeStabilityAssumption(studyPopulation = studyPop,                              sccsModel = model) ## # A tibble: 1 × 3 ##   ratio     p stable ##   <dbl> <dbl> <lgl>  ## 1  1.06     1 TRUE"},{"path":[]},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"power-calculations","dir":"Articles","previous_headings":"Additional diagnostics","what":"Power calculations","title":"Single studies using the SelfControlledCaseSeries package","text":"might interested know whether sufficient power detect particular effect size. makes sense perform power calculations study population fully defined, taking account loss various inclusion exclusion criteria. means use sccsIntervalData object ’ve just created basis power calculations. Since sample size fixed retrospective studies (data already collected), true effect size unknown, SelfControlledCaseSeries package provides function compute minimum detectable relative risk (MDRR) instead: Note provide covariate ID exposure interest, learned calling summary sccsIntervalData earlier. may many covariates model, likely interested MDRR one.","code":"computeMdrr(sccsIntervalData,             exposureCovariateId = 1000,             alpha = 0.05,             power = 0.8,             twoSided = TRUE,             method = \"binomial\") ## # A tibble: 1 × 5 ##   timeExposed timeTotal propTimeExposed events  mdrr ##         <dbl>     <int>           <dbl>  <int> <dbl> ## 1     1054001  10245499           0.103   5961  1.12"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"time-from-exposure-start-to-event","dir":"Articles","previous_headings":"Additional diagnostics","what":"Time from exposure start to event","title":"Single studies using the SelfControlledCaseSeries package","text":"gain better understanding event occurs relative start exposure, can plot relationship:","code":"plotExposureCentered(studyPop, sccsData, exposureEraId = aspirin)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"ages-covered-per-subject","dir":"Articles","previous_headings":"Additional diagnostics","what":"Ages covered per subject","title":"Single studies using the SelfControlledCaseSeries package","text":"can visualize age ranges covered subject’s observation time:  see observation periods span small age range, making unlikely within-person age-related effect large.","code":"plotAgeSpans(studyPop) ## Warning in plotAgeSpans(studyPop): There are 88453 cases. Random sampling 10000 ## cases."},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/articles/SingleStudies.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Single studies using the SelfControlledCaseSeries package","text":"Considerable work dedicated provide SelfControlledCaseSeries package. Furthermore, SelfControlledCaseSeries makes extensive use Cyclops package. Part code (related event-dependent observation periods) based SCCS package Yonas Ghebremichael-Weldeselassie, Heather Whitaker, Paddy Farrington. work supported part National Science Foundation grant IIS 1251151.","code":"citation(\"SelfControlledCaseSeries\") ## To cite package 'SelfControlledCaseSeries' in publications use: ##  ##   Schuemie M, Ryan P, Shaddox T, Suchard M (2025). ##   _SelfControlledCaseSeries: Self-Controlled Case Series_. R package ##   version 6.0.0, https://github.com/OHDSI/SelfControlledCaseSeries, ##   <https://ohdsi.github.io/SelfControlledCaseSeries/>. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Manual{, ##     title = {SelfControlledCaseSeries: Self-Controlled Case Series}, ##     author = {Martijn Schuemie and Patrick Ryan and Trevor Shaddox and Marc Suchard}, ##     year = {2025}, ##     note = {R package version 6.0.0,  ## https://github.com/OHDSI/SelfControlledCaseSeries}, ##     url = {https://ohdsi.github.io/SelfControlledCaseSeries/}, ##   } citation(\"Cyclops\") ## To cite Cyclops in publications use: ##  ##   Suchard MA, Simpson SE, Zorych I, Ryan P, Madigan D (2013). \"Massive ##   parallelization of serial inference algorithms for complex ##   generalized linear models.\" _ACM Transactions on Modeling and ##   Computer Simulation_, *23*, 10. doi:10.1145/2414416.2414791 ##   <https://doi.org/10.1145/2414416.2414791>. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Article{, ##     author = {M. A. Suchard and S. E. Simpson and I. Zorych and P. Ryan and D. Madigan}, ##     title = {Massive parallelization of serial inference algorithms for complex generalized linear models}, ##     journal = {ACM Transactions on Modeling and Computer Simulation}, ##     volume = {23}, ##     pages = {10}, ##     year = {2013}, ##     doi = {10.1145/2414416.2414791}, ##   }"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martijn Schuemie. Author, maintainer. Patrick Ryan. Author. Trevor Shaddox. Author. Marc Suchard. Author.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schuemie M, Ryan P, Shaddox T, Suchard M (2025). SelfControlledCaseSeries: Self-Controlled Case Series. R package version 6.0.0, https://github.com/OHDSI/SelfControlledCaseSeries, https://ohdsi.github.io/SelfControlledCaseSeries/.","code":"@Manual{,   title = {SelfControlledCaseSeries: Self-Controlled Case Series},   author = {Martijn Schuemie and Patrick Ryan and Trevor Shaddox and Marc Suchard},   year = {2025},   note = {R package version 6.0.0, https://github.com/OHDSI/SelfControlledCaseSeries},   url = {https://ohdsi.github.io/SelfControlledCaseSeries/}, }"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"selfcontrolledcaseseries","dir":"","previous_headings":"","what":"Self-Controlled Case Series","title":"Self-Controlled Case Series","text":"SelfControlledCaseSeries part HADES.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Self-Controlled Case Series","text":"SelfControlledCaseSeries R package performing Self-Controlled Case Series (SCCS) analyses observational database OMOP Common Data Model.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Self-Controlled Case Series","text":"Extracts necessary data database OMOP Common Data Model format. Optionally add seasonality using spline function. Optionally add age using spline function. Optionally add calendar time using spline function. Optionally correct event-dependent censoring observation period. Optionally add many covariates one analysis (e.g. drugs). Options constructing different types covariates risk windows, including pre-exposure windows (capture contra-indications). Optionally use regularization covariates except outcome interest. Also provides self-controlled risk interval design special case SCCS. Includes diagnostics major assumptions SCCS design.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Self-Controlled Case Series","text":"","code":"sccsData <- getDbSccsData(   connectionDetails = connectionDetails,   cdmDatabaseSchema = cdmDatabaseSchema,   outcomeIds = 192671,   getDbSccsDataArgs = createGetDbSccsDataArgs(     exposureIds = 1124300   ) )  studyPop <- createStudyPopulation(   sccsData = sccsData,   outcomeId = 192671,   createStudyPopulationArgs = createCreateStudyPopulationArgs(     firstOutcomeOnly = FALSE,     naivePeriod = 180   ) )      covarDiclofenac = createEraCovariateSettings(   label = \"Exposure of interest\",   includeEraIds = 1124300,   start = 0,   end = 0,   endAnchor = \"era end\" )  sccsIntervalData <- createSccsIntervalData(   studyPop,   sccsData,   createSccsIntervalDataArgs =  createCreateSccsIntervalDataArgs(     eraCovariateSettings = covarDiclofenac   ) )  model <- fitSccsModel(   sccsIntervalData = sccsIntervalData,   fitSccsModelArgs = createFitSccsModelArgs() )  model # SccsModel object #  # Outcome ID: 192671 #  # Outcome count: #        outcomeSubjects outcomeEvents outcomeObsPeriods # 192671          272243        387158            274449 #  # Estimates: # # A tibble: 1 x 7 #   Name                                ID Estimate LB95CI UB95CI logRr seLogRr #   <chr>                            <dbl>    <dbl>  <dbl>  <dbl> <dbl>   <dbl> # 1 Exposure of interest: Diclofenac  1000     1.18   1.13   1.24 0.167  0.0230"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"technology","dir":"","previous_headings":"","what":"Technology","title":"Self-Controlled Case Series","text":"SelfControlledCaseSeries R package, functions implemented C++.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"system-requirements","dir":"","previous_headings":"","what":"System Requirements","title":"Self-Controlled Case Series","text":"Requires R (version 4.1.0 higher). Installation Windows requires RTools. Libraries used SelfControlledCaseSeries require Java.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Self-Controlled Case Series","text":"See instructions configuring R environment, including Java. R, use following commands download install SelfControlledCaseSeries:","code":"install.packages(\"remotes\") remotes::install_github(\"ohdsi/SelfControlledCaseSeries\")"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"user-documentation","dir":"","previous_headings":"","what":"User Documentation","title":"Self-Controlled Case Series","text":"Documentation can found package website. PDF versions documentation also available: Vignette: Single studies using SelfControlledCaseSeries package Vignette: Running multiple analyses using SelfControlledCaseSeries package Vignette: Results schema SelfControlledCaseSeries package Package manual: SelfControlledCaseSeries.pdf","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Self-Controlled Case Series","text":"Developer questions/comments/feedback: OHDSI Forum use GitHub issue tracker bugs/issues/enhancements","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Self-Controlled Case Series","text":"Read can contribute package.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Self-Controlled Case Series","text":"SelfControlledCaseSeries licensed Apache License 2.0","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Self-Controlled Case Series","text":"SelfControlledCaseSeries developed R Studio.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"development-status","dir":"","previous_headings":"","what":"Development status","title":"Self-Controlled Case Series","text":"Stable. Actively used several projects.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Self-Controlled Case Series","text":"project supported part National Science Foundation grant IIS 1251151. Part code based SCCS package Yonas Ghebremichael-Weldeselassie, Heather Whitaker, Paddy Farrington.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventExposureIndependenceAssumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Check diagnostic for event-dependent exposure — checkEventExposureIndependenceAssumption","title":"Check diagnostic for event-dependent exposure — checkEventExposureIndependenceAssumption","text":"diagnostic tests whether dependency event subsequent exposures. requires indicated one era covariates pre-exposure window. function simply checks whether confidence interval effect estimate pre- exposure window overlaps nullBounds. designate era covariate pre-exposure window, set preExposure = TRUE calling createEraCovariateSettings(). Note , default, preExposure TRUE start smaller 0.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventExposureIndependenceAssumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check diagnostic for event-dependent exposure — checkEventExposureIndependenceAssumption","text":"","code":"checkEventExposureIndependenceAssumption(sccsModel, nullBounds = c(0.8, 1.25))"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventExposureIndependenceAssumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check diagnostic for event-dependent exposure — checkEventExposureIndependenceAssumption","text":"sccsModel fitted SCCS model created using fitSccsModel(). nullBounds bounds null hypothesis incidence rate ratio scale.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventExposureIndependenceAssumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check diagnostic for event-dependent exposure — checkEventExposureIndependenceAssumption","text":"tibble one row per pre-exposure window four columns: ratio indicates estimates incidence rate ratio pre-exposure window. lb ub represent upper lower bounds 95 percent confidence interval, pass TRUE confidence interval intersects null bounds.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventObservationIndependenceAssumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Check diagnostic for event-dependent observation end — checkEventObservationIndependenceAssumption","title":"Check diagnostic for event-dependent observation end — checkEventObservationIndependenceAssumption","text":"diagnostic tests whether dependency event end observation. adding probe window end observation, checking whether rate outcome elevated (decreased) window. end observation probe window automatically added model createSccsIntervalData() function, unless endOfObservationEraLength argument set 0. function extracts estimate window model, compares nullBounds.#'","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventObservationIndependenceAssumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check diagnostic for event-dependent observation end — checkEventObservationIndependenceAssumption","text":"","code":"checkEventObservationIndependenceAssumption(sccsModel, nullBounds = c(0.5, 2))"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventObservationIndependenceAssumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check diagnostic for event-dependent observation end — checkEventObservationIndependenceAssumption","text":"sccsModel fitted SCCS model created using fitSccsModel(). nullBounds bounds null hypothesis incidence rate ratio scale.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkEventObservationIndependenceAssumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check diagnostic for event-dependent observation end — checkEventObservationIndependenceAssumption","text":"tibble one row four columns: ratio indicates estimates incidence rate ratio probe end observation. lb ub represent upper lower bounds 95 percent confidence interval, pass TRUE confidence interval intersects null bounds.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkRareOutcomeAssumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if rare outcome assumption is violated — checkRareOutcomeAssumption","title":"Check if rare outcome assumption is violated — checkRareOutcomeAssumption","text":"Check rare outcome assumption violated","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkRareOutcomeAssumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if rare outcome assumption is violated — checkRareOutcomeAssumption","text":"","code":"checkRareOutcomeAssumption(   studyPopulation,   firstOutcomeOnly = NULL,   maxPrevalence = 0.1 )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkRareOutcomeAssumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if rare outcome assumption is violated — checkRareOutcomeAssumption","text":"studyPopulation object created using createStudyPopulation() function. firstOutcomeOnly analysis restricted first outcome ? left NULL, determined whether firstOutcomeOnly set TRUE calling createStudyPopulation() whether person one outcome pulling data server. maxPrevalence maximum allowed prevalence (proportion people outcome) allowed restricting first outcome .","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkRareOutcomeAssumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if rare outcome assumption is violated — checkRareOutcomeAssumption","text":"tibble one row three columns: outcomeProportion indicates proportion people outcome least . firstOutcomeOnly indicated whether analysis restricted first outcome . rare TRUE rare outcome assumption met, analysis restricted first outcome.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkRareOutcomeAssumption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if rare outcome assumption is violated — checkRareOutcomeAssumption","text":"SCCS analyses restrict first outcome occurrence per person avoid violating assumption subsequent occurrences independent. fine, long outcome rare. According Farrington et al., magnitude bias violating assumption 0.5p, p prevalence. default set threshold p 0.1, corresponding 5 percent bias. prevalence computed getDbSccsData() function, within population defined observation_period table, restricted study period(s) nesting cohort used.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkRareOutcomeAssumption.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check if rare outcome assumption is violated — checkRareOutcomeAssumption","text":"Farrington P, Whitaker H, Ghebremichael-Weldeselassie Y, Self-Controlled Case Series Studies: Modelling Guide R, CRC Press, 2018","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkTimeStabilityAssumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Check stability of outcome rate over time — checkTimeStabilityAssumption","title":"Check stability of outcome rate over time — checkTimeStabilityAssumption","text":"Check stability outcome rate time","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkTimeStabilityAssumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check stability of outcome rate over time — checkTimeStabilityAssumption","text":"","code":"checkTimeStabilityAssumption(   studyPopulation,   sccsModel = NULL,   maxRatio = 1.1,   alpha = 0.05 )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkTimeStabilityAssumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check stability of outcome rate over time — checkTimeStabilityAssumption","text":"studyPopulation object created using createStudyPopulation() function. sccsModel Optional: fitted SCCS model created using fitSccsModel(). model contains splines seasonality calendar time adjusted computing stability. maxRatio maximum global ratio observed expected count. alpha alpha (type 1 error) used test stability.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkTimeStabilityAssumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check stability of outcome rate over time — checkTimeStabilityAssumption","text":"tibble one row three columns: ratio indicates estimated mean ratio observed expected. p p-value null-hypothesis ratio smaller maxRatio, pass TRUE p greater alpha.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/checkTimeStabilityAssumption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check stability of outcome rate over time — checkTimeStabilityAssumption","text":"Computes month observed expected count, computes (weighted) mean ratio two. splines used adjust seasonality /calendar time, adjustments taken consideration considering expected count. one-sided p-value computed null hypothesis ratio smaller maxRatio. p-value exceeds specified alpha value, series considered stable.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeMdrr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the minimum detectable relative risk — computeMdrr","title":"Compute the minimum detectable relative risk — computeMdrr","text":"Compute minimum detectable relative risk","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeMdrr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the minimum detectable relative risk — computeMdrr","text":"","code":"computeMdrr(   object,   exposureCovariateId,   alpha = 0.05,   power = 0.8,   twoSided = TRUE,   method = \"SRL1\" )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeMdrr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the minimum detectable relative risk — computeMdrr","text":"object object either type SccsIntervalData created using createSccsIntervalData function, object type SccsModel created using fitSccsModel() function. exposureCovariateId Covariate Id health exposure interest. alpha Type error. power 1 - beta, beta type II error. twoSided Consider two-sided test? method type sample size formula used. Allowable values \"proportion\", \"binomial\", \"SRL1\", \"SRL2\", \"ageEffects\". Currently \"ageEffects\" supported.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeMdrr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the minimum detectable relative risk — computeMdrr","text":"data frame MDRR, number events, time risk, total time.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeMdrr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the minimum detectable relative risk — computeMdrr","text":"Compute minimum detectable relative risk (MDRR) given study population, using observed time risk total time days number events. Five sample size formulas implemented: sampling proportion, binomial proportion, 2 signed root likelihood ratio methods, likelihood extension age effects. expressions Musonda (2006) used.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeMdrr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the minimum detectable relative risk — computeMdrr","text":"Musonda P, Farrington CP, Whitaker HJ (2006) Samples sizes self-controlled case series studies, Statistics Medicine, 15;25(15):2618-31","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computePreExposureGainP.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute P for pre-exposure risk gain — computePreExposureGainP","title":"Compute P for pre-exposure risk gain — computePreExposureGainP","text":"function deprecated. Use computePreExposureGain() instead.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computePreExposureGainP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute P for pre-exposure risk gain — computePreExposureGainP","text":"","code":"computePreExposureGainP(sccsData, studyPopulation, exposureEraId = NULL)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computePreExposureGainP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute P for pre-exposure risk gain — computePreExposureGainP","text":"sccsData object type SccsData created using getDbSccsData function. studyPopulation object created using createStudyPopulation() function. exposureEraId exposure create era data . specified assumed one exposure data loaded database.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computePreExposureGainP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute P for pre-exposure risk gain — computePreExposureGainP","text":"one-sided p-value whether rate exposure higher , null change.#'","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeTimeStability.html","id":null,"dir":"Reference","previous_headings":"","what":"Check stability of outcome rate over time — computeTimeStability","title":"Check stability of outcome rate over time — computeTimeStability","text":"Check stability outcome rate time","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeTimeStability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check stability of outcome rate over time — computeTimeStability","text":"","code":"computeTimeStability(   studyPopulation,   sccsModel = NULL,   maxRatio = 1.1,   alpha = 0.05 )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeTimeStability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check stability of outcome rate over time — computeTimeStability","text":"studyPopulation object created using createStudyPopulation() function. sccsModel Optional: fitted SCCS model created using fitSccsModel(). model contains splines seasonality calendar time adjusted computing stability. maxRatio maximum global ratio observed expected count. alpha alpha (type 1 error) used test stability.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeTimeStability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check stability of outcome rate over time — computeTimeStability","text":"tibble one row three columns: ratio indicates estimated mean ratio observed expected. p p-value null-hypothesis ratio smaller maxRatio, pass TRUE p greater alpha.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/computeTimeStability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check stability of outcome rate over time — computeTimeStability","text":"DEPRECATED. Use checkTimeStabilityAssumption() instead.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertJsonToSccsAnalysesSpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert JSON to SccsAnalysesSpecifications — convertJsonToSccsAnalysesSpecifications","title":"Convert JSON to SccsAnalysesSpecifications — convertJsonToSccsAnalysesSpecifications","text":"Convert JSON SccsAnalysesSpecifications","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertJsonToSccsAnalysesSpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert JSON to SccsAnalysesSpecifications — convertJsonToSccsAnalysesSpecifications","text":"","code":"convertJsonToSccsAnalysesSpecifications(json)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertJsonToSccsAnalysesSpecifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert JSON to SccsAnalysesSpecifications — convertJsonToSccsAnalysesSpecifications","text":"json string containing JSON representation.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertJsonToSccsAnalysesSpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert JSON to SccsAnalysesSpecifications — convertJsonToSccsAnalysesSpecifications","text":"object type SccsAnalysesSpecifications.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertSccsAnalysesSpecificationsToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SccsAnalysesSpecifications to JSON — convertSccsAnalysesSpecificationsToJson","title":"Convert SccsAnalysesSpecifications to JSON — convertSccsAnalysesSpecificationsToJson","text":"Convert SccsAnalysesSpecifications JSON","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertSccsAnalysesSpecificationsToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SccsAnalysesSpecifications to JSON — convertSccsAnalysesSpecificationsToJson","text":"","code":"convertSccsAnalysesSpecificationsToJson(sccsAnalysesSpecifications)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertSccsAnalysesSpecificationsToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SccsAnalysesSpecifications to JSON — convertSccsAnalysesSpecificationsToJson","text":"sccsAnalysesSpecifications object type SccsAnalysesSpecifications created createSccsAnalysesSpecifications() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertSccsAnalysesSpecificationsToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SccsAnalysesSpecifications to JSON — convertSccsAnalysesSpecificationsToJson","text":"string containing JSON representation.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertUntypedListToSccsAnalysesSpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert untyped list to SccsAnalysesSpecifications — convertUntypedListToSccsAnalysesSpecifications","title":"Convert untyped list to SccsAnalysesSpecifications — convertUntypedListToSccsAnalysesSpecifications","text":"Convert untyped list SccsAnalysesSpecifications","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertUntypedListToSccsAnalysesSpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert untyped list to SccsAnalysesSpecifications — convertUntypedListToSccsAnalysesSpecifications","text":"","code":"convertUntypedListToSccsAnalysesSpecifications(untypedList)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertUntypedListToSccsAnalysesSpecifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert untyped list to SccsAnalysesSpecifications — convertUntypedListToSccsAnalysesSpecifications","text":"untypedList list untyped objects. example, objects call jsonlite::fromJSON(). Importantly, simplifyDataFrame must set FALSE .","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/convertUntypedListToSccsAnalysesSpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert untyped list to SccsAnalysesSpecifications — convertUntypedListToSccsAnalysesSpecifications","text":"object type SccsAnalysesSpecifications.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createAgeCovariateSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create age covariate sesettings#' Create age covariate settings — createAgeCovariateSettings","title":"Create age covariate sesettings#' Create age covariate settings — createAgeCovariateSettings","text":"Create age covariate sesettings#' Create age covariate settings","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createAgeCovariateSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create age covariate sesettings#' Create age covariate settings — createAgeCovariateSettings","text":"","code":"createAgeCovariateSettings(   ageKnots = 5,   allowRegularization = FALSE,   computeConfidenceIntervals = FALSE )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createAgeCovariateSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create age covariate sesettings#' Create age covariate settings — createAgeCovariateSettings","text":"ageKnots single number provided assumed indicate number knots use spline, knots automatically spaced according equal percentiles data. one number provided assumed exact location knots age-days allowRegularization fitting model, covariates defined allowed regularized? computeConfidenceIntervals confidence intervals computed covariates defined ? Setting FALSE might save computing time fitting model. turned FALSE automatically allowRegularization = TRUE.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createAgeCovariateSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create age covariate sesettings#' Create age covariate settings — createAgeCovariateSettings","text":"object type AgeCovariateSettings.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createAgeCovariateSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create age covariate sesettings#' Create age covariate settings — createAgeCovariateSettings","text":"Create object specifying whether age included model. Age can included splitting patient time calendar months. month, relative risk attributed age assumed constant, risk month month modeled using quadratic spline.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCalendarTimeCovariateSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create calendar time settings — createCalendarTimeCovariateSettings","title":"Create calendar time settings — createCalendarTimeCovariateSettings","text":"Create calendar time settings","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCalendarTimeCovariateSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create calendar time settings — createCalendarTimeCovariateSettings","text":"","code":"createCalendarTimeCovariateSettings(   calendarTimeKnots = 5,   allowRegularization = FALSE,   computeConfidenceIntervals = FALSE )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCalendarTimeCovariateSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create calendar time settings — createCalendarTimeCovariateSettings","text":"calendarTimeKnots single number provided assumed indicate number knots use spline. See details knots placed. series dates provided assumed exact location knots. allowRegularization fitting model, covariates defined allowed regularized? computeConfidenceIntervals confidence intervals computed covariates defined ? Setting FALSE might save computing time fitting model. turned FALSE automatically allowRegularization = TRUE.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCalendarTimeCovariateSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create calendar time settings — createCalendarTimeCovariateSettings","text":"object type CalendarTimeCovariateSettings.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCalendarTimeCovariateSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create calendar time settings — createCalendarTimeCovariateSettings","text":"Create object specifying whether calendar time included model. Calendar time can included splitting patient time calendar months. month, relative risk attributed calendar time assumed constant, risk month month modeled using quadratic spline. Whereas seasonality covariate uses cyclic spline, repeating every year, calendar time covariate can model trends years. number knots specified, knots automatically spaced according equal percentiles data (people observed). one study period provided, two knots (start end) automatically added additional study period. calendarTimeKnots = 5 3 study periods, total number knots 5 + 2 * (3 - 1) = 9.#'","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createControlIntervalSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create control interval settings — createControlIntervalSettings","title":"Create control interval settings — createControlIntervalSettings","text":"Create control interval settings","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createControlIntervalSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create control interval settings — createControlIntervalSettings","text":"","code":"createControlIntervalSettings(   includeEraIds = NULL,   excludeEraIds = NULL,   start = 0,   startAnchor = \"era start\",   end = 0,   endAnchor = \"era end\",   firstOccurrenceOnly = FALSE )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createControlIntervalSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create control interval settings — createControlIntervalSettings","text":"includeEraIds One IDs variables SccsData object used construct covariate. IDs specified, variables used. excludeEraIds One IDs variables [SccsData] object used construct covariate. start start control interval (days) relative startAnchor. startAnchor anchor point start control interval. Can \"era start\" \"era end\". end end control interval (days) relative endAnchor. endAnchor anchor point end control interval. Can \"era start\" \"era end\". firstOccurrenceOnly first occurrence exposure used?","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createControlIntervalSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create control interval settings — createControlIntervalSettings","text":"object type ControlIntervalSettings.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createControlIntervalSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create control interval settings — createControlIntervalSettings","text":"Create object specifying create control interval self-controlled risk interval (SCRI) design.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateSccsIntervalDataArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter object for the createSccsIntervalData() function — createCreateSccsIntervalDataArgs","title":"Create a parameter object for the createSccsIntervalData() function — createCreateSccsIntervalDataArgs","text":"Create parameter object createSccsIntervalData() function","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateSccsIntervalDataArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter object for the createSccsIntervalData() function — createCreateSccsIntervalDataArgs","text":"","code":"createCreateSccsIntervalDataArgs(   eraCovariateSettings,   ageCovariateSettings = NULL,   seasonalityCovariateSettings = NULL,   calendarTimeCovariateSettings = NULL,   minCasesForTimeCovariates = 10000,   endOfObservationEraLength = 30,   eventDependentObservation = FALSE )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateSccsIntervalDataArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter object for the createSccsIntervalData() function — createCreateSccsIntervalDataArgs","text":"eraCovariateSettings Either object type EraCovariateSettings created using createEraCovariateSettings() function, list objects. ageCovariateSettings object type AgeCovariateSettings created using createAgeCovariateSettings() function. seasonalityCovariateSettings object type SeasonalityCovariateSettings created using createSeasonalityCovariateSettings() function. calendarTimeCovariateSettings object type CalendarTimeCovariateSettings created using createCalendarTimeCovariateSettings() function. minCasesForTimeCovariates Minimum number cases use fit age, season calendar time splines. needed (available), cases exposed included. endOfObservationEraLength Length days probe inserted end patient's observation time. probe used test whether event- dependent observation end. Set 0 include probe. eventDependentObservation extension proposed Farrington et al. used adjust event-dependent observation time?","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateSccsIntervalDataArgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameter object for the createSccsIntervalData() function — createCreateSccsIntervalDataArgs","text":"object type CreateSccsIntervalDataArgs.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateSccsIntervalDataArgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a parameter object for the createSccsIntervalData() function — createCreateSccsIntervalDataArgs","text":"Create object defining parameter values.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateSccsIntervalDataArgs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a parameter object for the createSccsIntervalData() function — createCreateSccsIntervalDataArgs","text":"Farrington, C. P., Anaya-Izquierdo, ., Whitaker, H. J., Hocine, M.N., Douglas, ., Smeeth, L. (2011). Self-Controlled case series analysis event-dependent observation periods. Journal American Statistical Association 106 (494), 417-426","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateScriIntervalDataArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter object for the createScriIntervalData() function — createCreateScriIntervalDataArgs","title":"Create a parameter object for the createScriIntervalData() function — createCreateScriIntervalDataArgs","text":"Create parameter object createScriIntervalData() function","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateScriIntervalDataArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter object for the createScriIntervalData() function — createCreateScriIntervalDataArgs","text":"","code":"createCreateScriIntervalDataArgs(eraCovariateSettings, controlIntervalSettings)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateScriIntervalDataArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter object for the createScriIntervalData() function — createCreateScriIntervalDataArgs","text":"eraCovariateSettings Either object type EraCovariateSettings created using createEraCovariateSettings() function, list objects. controlIntervalSettings object type ControlIntervalSettings created using createControlIntervalSettings() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateScriIntervalDataArgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameter object for the createScriIntervalData() function — createCreateScriIntervalDataArgs","text":"object type CreateScriIntervalDataArgs.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateScriIntervalDataArgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a parameter object for the createScriIntervalData() function — createCreateScriIntervalDataArgs","text":"Create object defining parameter values.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateStudyPopulationArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter object for the createStudyPopulation() function — createCreateStudyPopulationArgs","title":"Create a parameter object for the createStudyPopulation() function — createCreateStudyPopulationArgs","text":"Create parameter object createStudyPopulation() function","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateStudyPopulationArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter object for the createStudyPopulation() function — createCreateStudyPopulationArgs","text":"","code":"createCreateStudyPopulationArgs(   firstOutcomeOnly = FALSE,   naivePeriod = 0,   minAge = NULL,   maxAge = NULL,   genderConceptIds = NULL,   restrictTimeToEraId = NULL )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateStudyPopulationArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter object for the createStudyPopulation() function — createCreateStudyPopulationArgs","text":"firstOutcomeOnly Whether first occurrence outcome considered. naivePeriod number days start patient's observation period included risk calculations. Note naive period can used determine current covariate status right naive period, whether outcome first one. minAge Minimum age patient time included analysis. Note information prior min age still used determine exposure status minimum age (e.g. prescription started just prior reaching minimum age). Also, outcomes occurring minimum age reached considered prior outcomes using first outcomes . Age specified years, non-integer values allowed. specified, age restriction applied. maxAge Maximum age patient time included analysis. Age specified years, non-integer values allowed. specified, age restriction applied. genderConceptIds Set gender concept IDs restrict population . specified, restriction gender applied. restrictTimeToEraId provided, study time (patients) restricted calendar time era observed data. example, era ID refers drug, study time restricted drug market.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateStudyPopulationArgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameter object for the createStudyPopulation() function — createCreateStudyPopulationArgs","text":"object type CreateStudyPopulationArgs.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createCreateStudyPopulationArgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a parameter object for the createStudyPopulation() function — createCreateStudyPopulationArgs","text":"Create object defining parameter values.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createDefaultSccsMultiThreadingSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create default SelfControlledCaseSeries multi-threading settings — createDefaultSccsMultiThreadingSettings","title":"Create default SelfControlledCaseSeries multi-threading settings — createDefaultSccsMultiThreadingSettings","text":"Create SelfControlledCaseSeries multi-threading settings based maximum number cores used.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createDefaultSccsMultiThreadingSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create default SelfControlledCaseSeries multi-threading settings — createDefaultSccsMultiThreadingSettings","text":"","code":"createDefaultSccsMultiThreadingSettings(maxCores)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createDefaultSccsMultiThreadingSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create default SelfControlledCaseSeries multi-threading settings — createDefaultSccsMultiThreadingSettings","text":"maxCores Maximum number CPU cores use.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createDefaultSccsMultiThreadingSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create default SelfControlledCaseSeries multi-threading settings — createDefaultSccsMultiThreadingSettings","text":"object type SccsMultiThreadingSettings.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createDefaultSccsMultiThreadingSettings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create default SelfControlledCaseSeries multi-threading settings — createDefaultSccsMultiThreadingSettings","text":"","code":"settings <- createDefaultSccsMultiThreadingSettings(10)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createEraCovariateSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create era covariate settings — createEraCovariateSettings","title":"Create era covariate settings — createEraCovariateSettings","text":"Create era covariate settings","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createEraCovariateSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create era covariate settings — createEraCovariateSettings","text":"","code":"createEraCovariateSettings(   includeEraIds,   excludeEraIds = NULL,   label = \"Covariates\",   stratifyById = FALSE,   start = 0,   startAnchor = \"era start\",   end = 0,   endAnchor = \"era end\",   firstOccurrenceOnly = FALSE,   allowRegularization = FALSE,   profileLikelihood = FALSE,   exposureOfInterest = FALSE,   preExposure = start < 0 )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createEraCovariateSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create era covariate settings — createEraCovariateSettings","text":"includeEraIds One IDs variables SccsData object used construct covariate. set NULL, variables used. excludeEraIds One IDs variables [SccsData] object used construct covariate. label label used identify covariates created using settings. stratifyById single covariate created every ID SccsData object, single covariate constructed? example, IDs identify exposures different drugs, covariate constructed every drug, single covariate exposure drugs. Note overlap considered single exposure. start start risk window (days) relative startAnchor. startAnchor anchor point start risk window. Can \"era start\" \"era end\". end end risk window (days) relative endAnchor. endAnchor anchor point end risk window. Can \"era start\" \"era end\". firstOccurrenceOnly first occurrence exposure used? allowRegularization fitting model, covariates defined allowed regularized? profileLikelihood fitting model, likelihood profile computed covariate defined ? likelihood profile can used avoid making normal approximations likelihood can used methods specifically designed make use profile, may take compute. exposureOfInterest TRUE, fitted coefficient variable reported using runSccsAnalyses(). Requires includeEraIds exposure reference ID defined createExposure(). preExposure TRUE, variable used pre-exposure diagnostic.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createEraCovariateSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create era covariate settings — createEraCovariateSettings","text":"object type EraCovariateSettings.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createEraCovariateSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create era covariate settings — createEraCovariateSettings","text":"Create object specifying create (set ) era-based covariates.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create exposure definition — createExposure","title":"Create exposure definition — createExposure","text":"Create exposure definition","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create exposure definition — createExposure","text":"","code":"createExposure(exposureId, exposureIdRef = \"exposureId\", trueEffectSize = NA)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create exposure definition — createExposure","text":"exposureId integer used identify exposure exposure cohort table. exposureIdRef string used refer exposure defining covariates using createEraCovariateSettings() function. trueEffectSize negative positive controls: known true effect size. used empirical calibration. Negative controls trueEffectSize = 1. true effect size unknown, use trueEffectSize = NA.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create exposure definition — createExposure","text":"object type Exposure.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create exposure definition — createExposure","text":"Create exposure definition, used createExposuresOutcome function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposuresOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a exposures-outcome combination. — createExposuresOutcome","title":"Create a exposures-outcome combination. — createExposuresOutcome","text":"Create exposures-outcome combination.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposuresOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a exposures-outcome combination. — createExposuresOutcome","text":"","code":"createExposuresOutcome(outcomeId, exposures, nestingCohortId = NULL)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposuresOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a exposures-outcome combination. — createExposuresOutcome","text":"outcomeId integer used identify outcome outcome cohort table. exposures list object type Exposure created createExposure(). nestingCohortId (Optional) nesting cohort ID.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposuresOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a exposures-outcome combination. — createExposuresOutcome","text":"object type ExposuresOutcome.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createExposuresOutcome.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a exposures-outcome combination. — createExposuresOutcome","text":"Create set hypotheses interest, used runSccsAnalyses() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createFitSccsModelArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter object for the function fitSccsModel — createFitSccsModelArgs","title":"Create a parameter object for the function fitSccsModel — createFitSccsModelArgs","text":"Create parameter object function fitSccsModel","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createFitSccsModelArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter object for the function fitSccsModel — createFitSccsModelArgs","text":"","code":"createFitSccsModelArgs(   prior = createPrior(\"laplace\", useCrossValidation = TRUE),   control = createControl(cvType = \"auto\", selectorType = \"byPid\", startingVariance =     0.1, seed = 1, resetCoefficients = TRUE, noiseLevel = \"quiet\"),   profileGrid = NULL,   profileBounds = c(log(0.1), log(10)) )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createFitSccsModelArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter object for the function fitSccsModel — createFitSccsModelArgs","text":"prior prior used fit model. See Cyclops::createPrior details. control control object used control cross-validation used determine hyperparameters prior (applicable). See Cyclops::createControl details. profileGrid one-dimensional grid points log(relative risk) scale likelihood coefficient variables sampled. See details. profileBounds bounds (log relative risk scale) adaptive sampling likelihood function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createFitSccsModelArgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameter object for the function fitSccsModel — createFitSccsModelArgs","text":"object type FitSccsModelArgs.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createFitSccsModelArgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a parameter object for the function fitSccsModel — createFitSccsModelArgs","text":"Create object defining parameter values.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createGetDbSccsDataArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter object for the function getDbSccsData — createGetDbSccsDataArgs","title":"Create a parameter object for the function getDbSccsData — createGetDbSccsDataArgs","text":"Create parameter object function getDbSccsData","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createGetDbSccsDataArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter object for the function getDbSccsData — createGetDbSccsDataArgs","text":"","code":"createGetDbSccsDataArgs(   nestingCohortId = NULL,   deleteCovariatesSmallCount = 0,   studyStartDates = c(),   studyEndDates = c(),   maxCasesPerOutcome = 0,   exposureIds = \"exposureId\",   customCovariateIds = NULL )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createGetDbSccsDataArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter object for the function getDbSccsData — createGetDbSccsDataArgs","text":"nestingCohortId cohort definition ID identifying records nestingCohortTable use nesting cohort. deleteCovariatesSmallCount minimum count covariate appear data kept. studyStartDates character object specifying minimum dates data used. Date format 'yyyymmdd'. Use \"\" indicate time prior. See section information. studyEndDates character object specifying maximum dates data used. Date format 'yyyymmdd'. Use \"\" indicate end observation. See section information. maxCasesPerOutcome number cases single outcome cases sampled size. maxCasesPerOutcome = 0 indicates maximum size. exposureIds list identifiers extract exposure table. exposureTable = DRUG_ERA, exposureIds CONCEPT_ID. exposureTable = \"drug_era\", exposureIds used select drug_concept_id. exposure IDs provided, drugs cohorts exposureTable included exposures. customCovariateIds list cohort definition IDs identifying records customCovariateTable use building custom covariates.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createGetDbSccsDataArgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameter object for the function getDbSccsData — createGetDbSccsDataArgs","text":"object type GetDbSccsDataArgs.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createGetDbSccsDataArgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a parameter object for the function getDbSccsData — createGetDbSccsDataArgs","text":"Create object defining parameter values.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createResultsDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the results data model tables on a database server. — createResultsDataModel","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"Create results data model tables database server.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createResultsDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"","code":"createResultsDataModel(   connectionDetails = NULL,   databaseSchema,   tablePrefix = \"\" )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createResultsDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"connectionDetails DatabaseConnector connectionDetails instance @seealsoDatabaseConnector::createConnectionDetails databaseSchema schema server tables created. tablePrefix (Optional)  string insert table names database table names","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createResultsDataModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"PostgreSQL SQLite servers supported.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysesSpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full SCCS analysis specifications — createSccsAnalysesSpecifications","title":"Create full SCCS analysis specifications — createSccsAnalysesSpecifications","text":"Create full SCCS analysis specifications","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysesSpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full SCCS analysis specifications — createSccsAnalysesSpecifications","text":"","code":"createSccsAnalysesSpecifications(   sccsAnalysisList,   exposuresOutcomeList,   analysesToExclude = NULL,   combineDataFetchAcrossOutcomes = FALSE,   sccsDiagnosticThresholds = SelfControlledCaseSeries::createSccsDiagnosticThresholds(),   controlType = \"outcome\" )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysesSpecifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full SCCS analysis specifications — createSccsAnalysesSpecifications","text":"sccsAnalysisList list objects type SccsAnalysis created using createSccsAnalysis() function. exposuresOutcomeList list objects type ExposuresOutcome created using createExposuresOutcome() function. analysesToExclude Analyses exclude. See Analyses Exclude section details. combineDataFetchAcrossOutcomes fetching data database done one outcome time, outcomes one fetch? Combining fetches efficient large overlap subjects different outcomes. sccsDiagnosticThresholds object type SccsDiagnosticThresholds created using createSccsDiagnosticThresholds(). controlType Type negative (positive) controls. Can \"outcome\" \"exposure\". set \"outcome\", controls exposure (nesting cohort) grouped together calibration. set \"exposure\", controls outcome grouped together.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysesSpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create full SCCS analysis specifications — createSccsAnalysesSpecifications","text":"object type SccsAnalysesSpecifications.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysesSpecifications.html","id":"analyses-to-exclude","dir":"Reference","previous_headings":"","what":"Analyses to Exclude","title":"Create full SCCS analysis specifications — createSccsAnalysesSpecifications","text":"Normally, runSccsAnalyses run combinations exposures-outcome-analyses settings. However, sometimes may need combinations. Using analysesToExclude argument, can remove certain items full matrix. argument data frame least one following columns: exposureId outcomeId nestingCohortId analysisId data frame joined outcome model reference table executing, matching rows removed. example, one specifies one exposure ID analysis ID, analyses exposure analysis ID skipped.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SelfControlledCaseSeries analysis specification — createSccsAnalysis","title":"Create a SelfControlledCaseSeries analysis specification — createSccsAnalysis","text":"Create SelfControlledCaseSeries analysis specification","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SelfControlledCaseSeries analysis specification — createSccsAnalysis","text":"","code":"createSccsAnalysis(   analysisId = 1,   description = \"\",   getDbSccsDataArgs,   createStudyPopulationArgs,   createIntervalDataArgs,   fitSccsModelArgs )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SelfControlledCaseSeries analysis specification — createSccsAnalysis","text":"analysisId integer used later refer specific set analysis choices. description short description analysis. getDbSccsDataArgs object representing arguments used calling getDbSccsData function. createStudyPopulationArgs object representing arguments used calling getDbSccsData function. createIntervalDataArgs object representing arguments used calling createSccsIntervalData createScriIntervalData function. fitSccsModelArgs object representing arguments used calling fitSccsModel function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SelfControlledCaseSeries analysis specification — createSccsAnalysis","text":"object type SccsAnalysis, used runSccsAnalyses function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsDiagnosticThresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SCCS diagnostics thresholds — createSccsDiagnosticThresholds","title":"Create SCCS diagnostics thresholds — createSccsDiagnosticThresholds","text":"Threshold used calling runSccsAnalyses() determine pass fail diagnostics.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsDiagnosticThresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SCCS diagnostics thresholds — createSccsDiagnosticThresholds","text":"","code":"createSccsDiagnosticThresholds(   mdrrThreshold = 10,   easeThreshold = 0.25,   timeTrendMaxRatio = 1.1,   rareOutcomeMaxPrevalence = 0.1,   eventObservationDependenceNullBounds = c(0.5, 2),   eventExposureDependenceNullBounds = c(0.8, 1.25) )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsDiagnosticThresholds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SCCS diagnostics thresholds — createSccsDiagnosticThresholds","text":"mdrrThreshold maximum allowed minimum detectable relative risk (MDRR)? easeThreshold maximum allowed expected absolute systematic error (EASE). timeTrendMaxRatio maximum global ratio observed expected count time stability diagnostic. rareOutcomeMaxPrevalence maximum allowed prevalence (proportion people outcome) allowed restricting first outcome . eventObservationDependenceNullBounds bounds null hypothesis incidence rate ratio end--observation probe window. eventExposureDependenceNullBounds bounds null hypothesis incidence rate pre-exposure window.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsDiagnosticThresholds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SCCS diagnostics thresholds — createSccsDiagnosticThresholds","text":"object type SccsDiagnosticThresholds.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsIntervalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SCCS era data — createSccsIntervalData","title":"Create SCCS era data — createSccsIntervalData","text":"Create SCCS era data","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsIntervalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SCCS era data — createSccsIntervalData","text":"","code":"createSccsIntervalData(studyPopulation, sccsData, createSccsIntervalDataArgs)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsIntervalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SCCS era data — createSccsIntervalData","text":"studyPopulation object created using createStudyPopulation() function. sccsData object type SccsData created using getDbSccsData function. createSccsIntervalDataArgs object type CreateSccsIntervalDataArgs created createCreateSccsIntervalDataArgs function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsIntervalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SCCS era data — createSccsIntervalData","text":"object type SccsIntervalData.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsIntervalData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create SCCS era data — createSccsIntervalData","text":"function creates covariates based data sccsData argument, according provided settings. chops patient time periods covariates remain constant. output details periods, durations, sparse representation covariate values.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsMultiThreadingSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SelfControlledCaseSeries multi-threading settings — createSccsMultiThreadingSettings","title":"Create SelfControlledCaseSeries multi-threading settings — createSccsMultiThreadingSettings","text":"Create SelfControlledCaseSeries multi-threading settings","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsMultiThreadingSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SelfControlledCaseSeries multi-threading settings — createSccsMultiThreadingSettings","text":"","code":"createSccsMultiThreadingSettings(   getDbSccsDataThreads = 1,   createStudyPopulationThreads = 1,   createIntervalDataThreads = 1,   fitSccsModelThreads = 1,   cvThreads = 1,   calibrationThreads = 1 )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsMultiThreadingSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SelfControlledCaseSeries multi-threading settings — createSccsMultiThreadingSettings","text":"getDbSccsDataThreads number parallel threads use building SccsData objects. createStudyPopulationThreads number parallel threads use building studyPopulation objects. createIntervalDataThreads number parallel threads use building SccsIntervalData objects. fitSccsModelThreads number parallel threads use fitting models. cvThreads number parallel threads use cross- validation estimating hyperparameter outcome model. Note total number CV threads one time fitSccsModelThreads * cvThreads. calibrationThreads number parallel threads use empirical calibration.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsMultiThreadingSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SelfControlledCaseSeries multi-threading settings — createSccsMultiThreadingSettings","text":"object type SccsMultiThreadingSettings.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsSimulationSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SCCS simulation settings — createSccsSimulationSettings","title":"Create SCCS simulation settings — createSccsSimulationSettings","text":"Create SCCS simulation settings","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsSimulationSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SCCS simulation settings — createSccsSimulationSettings","text":"","code":"createSccsSimulationSettings(   meanPatientTime = 4 * 365,   sdPatientTime = 2 * 365,   minAge = 18 * 365,   maxAge = 65 * 365,   minBaselineRate = 0.001,   maxBaselineRate = 0.01,   minCalendarTime = as.Date(\"2000-01-01\"),   maxCalendarTime = as.Date(\"2010-01-01\"),   eraIds = c(1, 2),   patientUsages = c(0.2, 0.1),   usageRate = c(0.01, 0.01),   usageRateSlope = c(0, 0),   meanPrescriptionDurations = c(14, 30),   sdPrescriptionDurations = c(7, 14),   simulationRiskWindows = list(createSimulationRiskWindow(relativeRisks = 1),     createSimulationRiskWindow(relativeRisks = 1.5)),   includeAgeEffect = TRUE,   ageKnots = 5,   includeSeasonality = TRUE,   seasonKnots = 5,   includeCalendarTimeEffect = TRUE,   calendarTimeKnots = 5,   calendarTimeMonotonic = FALSE,   outcomeId = 10 )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsSimulationSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SCCS simulation settings — createSccsSimulationSettings","text":"meanPatientTime Mean number observation days per patient. sdPatientTime Standard deviation observation days per patient. minAge minimum age days. maxAge maximum age days. minBaselineRate minimum baseline rate (per day). maxBaselineRate maximum baseline rate (per day). minCalendarTime minimum date patients observed. maxCalendarTime maximum date patients observed. eraIds IDs covariates generated. patientUsages fraction patients use drugs. usageRate rate prescriptions per person uses drug. usageRateSlope change usage rate one day next. usageRate intercept day 0 meanPrescriptionDurations mean duration prescription, per drug. sdPrescriptionDurations standard deviation duration prescription, per drug. simulationRiskWindows One list objects type SimulationRiskWindow created using createSimulationRiskWindow() function. function. includeAgeEffect Include age effect outcome? ageKnots Number knots age spline. includeSeasonality Include seasonality outcome? seasonKnots Number knots seasonality spline. includeCalendarTimeEffect Include calendar time effect outcome? calendarTimeKnots Number knots calendar time spline. calendarTimeMonotonic calender time effect monotonic? outcomeId ID used outcome.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsSimulationSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SCCS simulation settings — createSccsSimulationSettings","text":"object type SccsSimulationSettings.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSccsSimulationSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create SCCS simulation settings — createSccsSimulationSettings","text":"Create object settings SCCS simulation.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createScriIntervalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Self-Controlled Risk Interval (SCRI) era data — createScriIntervalData","title":"Create Self-Controlled Risk Interval (SCRI) era data — createScriIntervalData","text":"Create Self-Controlled Risk Interval (SCRI) era data","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createScriIntervalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Self-Controlled Risk Interval (SCRI) era data — createScriIntervalData","text":"","code":"createScriIntervalData(studyPopulation, sccsData, createScriIntervalDataArgs)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createScriIntervalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Self-Controlled Risk Interval (SCRI) era data — createScriIntervalData","text":"studyPopulation object created using createStudyPopulation() function. sccsData object type SccsData created using getDbSccsData function. createScriIntervalDataArgs object type CreateScriIntervalDataArgs created createCreateScriIntervalDataArgs() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createScriIntervalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Self-Controlled Risk Interval (SCRI) era data — createScriIntervalData","text":"object type SccsIntervalData.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createScriIntervalData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Self-Controlled Risk Interval (SCRI) era data — createScriIntervalData","text":"function creates interval data according elf-Controlled Risk Interval (SCRI) design. Unlike generic SCCS design, patient time used establish background rate, SCRI design specific control interval (relative exposure) needs defined. final model include time either part risk interval (defined using eraCovariateSettings argument, control interval (defined using controlIntervalSettings).","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createScriIntervalData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create Self-Controlled Risk Interval (SCRI) era data — createScriIntervalData","text":"Greene SK, Kulldorff M, Lewis EM, Li R, Yin R, Weintraub ES, Fireman BH, Lieu TA, Nordin JD, Glanz JM, Baxter R, Jacobsen SJ, Broder KR, Lee GM. Near real-time surveillance influenza vaccine safety: proof--concept Vaccine Safety Datalink Project. J Epidemiol. 2010 Jan 15;171(2):177-88. doi: 10.1093/aje/kwp345.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSeasonalityCovariateSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create seasonality settings — createSeasonalityCovariateSettings","title":"Create seasonality settings — createSeasonalityCovariateSettings","text":"Create seasonality settings","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSeasonalityCovariateSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create seasonality settings — createSeasonalityCovariateSettings","text":"","code":"createSeasonalityCovariateSettings(   seasonKnots = 5,   allowRegularization = FALSE,   computeConfidenceIntervals = FALSE )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSeasonalityCovariateSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create seasonality settings — createSeasonalityCovariateSettings","text":"seasonKnots single number provided assumed indicate number knots use spline, knots automatically equally spaced across year. one number provided assumed exact location knots days relative start year. allowRegularization fitting model, covariates defined allowed regularized? computeConfidenceIntervals confidence intervals computed covariates defined ? Setting FALSE might save computing time fitting model. turned FALSE automatically allowRegularization = TRUE.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSeasonalityCovariateSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create seasonality settings — createSeasonalityCovariateSettings","text":"object type SeasonalityCovariateSettings.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSeasonalityCovariateSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create seasonality settings — createSeasonalityCovariateSettings","text":"Create object specifying whether seasonality included model. Seasonality can included splitting patient time calendar months. month, relative risk attributed season assumed constant, risk month month modeled using cyclic quadratic spline.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSimulationRiskWindow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a risk window definition for simulation — createSimulationRiskWindow","title":"Create a risk window definition for simulation — createSimulationRiskWindow","text":"Create risk window definition simulation","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSimulationRiskWindow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a risk window definition for simulation — createSimulationRiskWindow","text":"","code":"createSimulationRiskWindow(   start = 0,   end = 0,   endAnchor = \"era end\",   splitPoints = c(),   relativeRisks = c(0) )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSimulationRiskWindow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a risk window definition for simulation — createSimulationRiskWindow","text":"start Start risk window relative exposure start. end end risk window (days) relative endAnchor. endAnchor anchor point end risk window. Can \"era start\" \"era end\". splitPoints Subdivision risk window smaller sub-windows. relativeRisks Either single number representing relative risk risk window, splitPoints defined vector relative risks, one sub-window.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createSimulationRiskWindow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a risk window definition for simulation — createSimulationRiskWindow","text":"object type SimulationRiskWindow.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createStudyPopulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a study population — createStudyPopulation","title":"Create a study population — createStudyPopulation","text":"Create study population","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createStudyPopulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a study population — createStudyPopulation","text":"","code":"createStudyPopulation(sccsData, outcomeId = NULL, createStudyPopulationArgs)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createStudyPopulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a study population — createStudyPopulation","text":"sccsData object type SccsData created using getDbSccsData function. outcomeId outcome create era data . specified assumed one outcome data loaded database. createStudyPopulationArgs object type CreateStudyPopulationArgs created using createCreateStudyPopulationArgs() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createStudyPopulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a study population — createStudyPopulation","text":"list specifying study population, following items: cases: tibble one row per observation period person outcome. outcomes: tibble listing days case outcome. metaData: list meta data study population, including attrition.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/createStudyPopulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a study population — createStudyPopulation","text":"Create study population specific outcome, applying several restrictions.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/cyclicSplineDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a design matrix for a cyclic spline — cyclicSplineDesign","title":"Create a design matrix for a cyclic spline — cyclicSplineDesign","text":"Create design matrix cyclic spline","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/cyclicSplineDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a design matrix for a cyclic spline — cyclicSplineDesign","text":"","code":"cyclicSplineDesign(x, knots, ord = 3)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/cyclicSplineDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a design matrix for a cyclic spline — cyclicSplineDesign","text":"x Vector coordinates points interpolated. knots Location knots. ord Order spline function. ord = 3 implies quadratic.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/cyclicSplineDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a design matrix for a cyclic spline — cyclicSplineDesign","text":"function used functions package.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/exportToCsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export SCCSresults to CSV files — exportToCsv","title":"Export SCCSresults to CSV files — exportToCsv","text":"Export SCCSresults CSV files","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/exportToCsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export SCCSresults to CSV files — exportToCsv","text":"","code":"exportToCsv(   outputFolder,   exportFolder = file.path(outputFolder, \"export\"),   databaseId = 1,   minCellCount = 5,   maxCores = 1 )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/exportToCsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export SCCSresults to CSV files — exportToCsv","text":"outputFolder folder runCmAnalyses() generated results. exportFolder folder CSV files written. databaseId unique ID database. appended tables. minCellCount preserve privacy: minimum number subjects contributing count can included results. count threshold, set -minCellCount. maxCores Maximum number CPU cores use.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/exportToCsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export SCCSresults to CSV files — exportToCsv","text":"return anything. called side-effect populating exportFolder CSV files.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/exportToCsv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export SCCSresults to CSV files — exportToCsv","text":"requires runSccsAnalyses() executed first. exports results outputFolder CSV files sharing sites.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/fitSccsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the SCCS model — fitSccsModel","title":"Fit the SCCS model — fitSccsModel","text":"Fit SCCS model","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/fitSccsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the SCCS model — fitSccsModel","text":"","code":"fitSccsModel(sccsIntervalData, fitSccsModelArgs)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/fitSccsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the SCCS model — fitSccsModel","text":"sccsIntervalData object type SccsIntervalData created using createSccsIntervalData function. fitSccsModelArgs object type FitSccsModelArgs created createFitSccsModelArgs() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/fitSccsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the SCCS model — fitSccsModel","text":"object type SccsModel. Generic functions print, coef, confint available.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/fitSccsModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit the SCCS model — fitSccsModel","text":"Fits SCCS model conditional Poisson regression. allowed, coefficients covariates can regularized. Likelihood profiling done variables profileLikelihood set TRUE calling createEraCovariateSettings(). Either specify profileGrid completely user- defined grid, profileBounds adaptive grid. defined log IRR scale. profileGrid profileGrid NULL likelihood profiling disabled.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/fitSccsModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit the SCCS model — fitSccsModel","text":"Suchard, M.., Simpson, S.E., Zorych, ., Ryan, P., Madigan, D. (2013). Massive parallelization serial inference algorithms complex generalized linear models. ACM Transactions Modeling Computer Simulation 23, 10","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getAttritionTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the attrition table for a population — getAttritionTable","title":"Get the attrition table for a population — getAttritionTable","text":"Get attrition table population","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getAttritionTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the attrition table for a population — getAttritionTable","text":"","code":"getAttritionTable(object)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getAttritionTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the attrition table for a population — getAttritionTable","text":"object Either object type SccsData, population object generated functions like createStudyPopulation(), object type outcomeModel.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getAttritionTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the attrition table for a population — getAttritionTable","text":"tibble specifying number people exposures population specific steps filtering.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDataMigrator.html","id":null,"dir":"Reference","previous_headings":"","what":"Get database migrations instance — getDataMigrator","title":"Get database migrations instance — getDataMigrator","text":"Returns ResultModelManager DataMigrationsManager instance.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDataMigrator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get database migrations instance — getDataMigrator","text":"","code":"getDataMigrator(connectionDetails, databaseSchema, tablePrefix = \"\")"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDataMigrator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get database migrations instance — getDataMigrator","text":"connectionDetails DatabaseConnector connection details object databaseSchema String schema database schema lives tablePrefix (Optional) Use table prefix used table names (e.g. \"cd_\")","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDataMigrator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get database migrations instance — getDataMigrator","text":"Instance ResultModelManager::DataMigrationManager interface converting existing data models","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDbSccsData.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data for SCCS from the database — getDbSccsData","title":"Load data for SCCS from the database — getDbSccsData","text":"Load data needed perform SCCS analysis database.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDbSccsData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data for SCCS from the database — getDbSccsData","text":"","code":"getDbSccsData(   connectionDetails,   cdmDatabaseSchema,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   outcomeDatabaseSchema = cdmDatabaseSchema,   outcomeTable = \"condition_era\",   outcomeIds,   exposureDatabaseSchema = cdmDatabaseSchema,   exposureTable = \"drug_era\",   customCovariateDatabaseSchema = cdmDatabaseSchema,   customCovariateTable = \"cohort\",   nestingCohortDatabaseSchema = cdmDatabaseSchema,   nestingCohortTable = \"cohort\",   getDbSccsDataArgs )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDbSccsData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data for SCCS from the database — getDbSccsData","text":"connectionDetails R object type ConnectionDetails created using function DatabaseConnector::createConnectionDetails() function. cdmDatabaseSchema name database schema contains OMOP CDM instance.  Requires read permissions database. SQL Server, specify database schema, example 'cdm_instance.dbo'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. outcomeDatabaseSchema name database schema location data used define outcome cohorts available. outcomeTable = \"condition_era\", outcomeDatabaseSchema used.  Requires read permissions database. outcomeTable table name contains outcome cohorts.  outcomeTable \"condition_era\", expectation outcomeTable format cohort table (see details). outcomeIds list IDs used define outcomes.  outcomeTable \"condition_era\" list contains records found cohort_definition_id field. exposureDatabaseSchema name database schema location exposure data used define exposure eras available. exposureTable = \"drug_era\", exposureDatabaseSchema used assumed equal cdmDatabaseSchema.  Requires read permissions database. exposureTable tablename contains exposure cohorts.  exposureTable \"drug_era\", expectation exposureTable format cohort table (see details). customCovariateDatabaseSchema name database schema location custom covariate data available. customCovariateTable Name table holding custom covariates. table structure cohort table (see details). nestingCohortDatabaseSchema name database schema location nesting cohort defined. nestingCohortTable Name table holding nesting cohort. table structure cohort table (see details). getDbSccsDataArgs object type GetDbSccsDataArgs created createGetDbSccsDataArgs() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDbSccsData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data for SCCS from the database — getDbSccsData","text":"SccsData object.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDbSccsData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load data for SCCS from the database — getDbSccsData","text":"function downloads several types information: Information occurrences outcome(s) interest. Note information multiple outcomes can fetched one go, later specific outcome can specified want build model. Information observation time age people outcomes. Information exposures interest want include model. Five different database schemas can specified, five different types information: cdmDatabaseSchema used extract patient age observation period. outcomeDatabaseSchema used extract information outcomes, exposureDatabaseSchema used retrieve information exposures, customCovariateDatabaseSchema optionally used find additional, user-defined covariates. four locations point database schema. nestingCohortDatabaseSchema optionally used define cohort analysis nested, example cohort diabetics patients. five locations point database schema. Cohort tables assumed following fields: cohort_definition_id, subject_id, cohort_start_date, cohort_end_date.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDbSccsData.html","id":"study-period-start-and-end-dates","dir":"Reference","previous_headings":"","what":"Study period start and end dates","title":"Load data for SCCS from the database — getDbSccsData","text":"study start end date define period patient data included analysis. Multiple non-overlapping periods can defined, example allow excluding time COVID pandemic, outcome rates unstable.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDiagnosticsSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a summary report of the analyses diagnostics — getDiagnosticsSummary","title":"Get a summary report of the analyses diagnostics — getDiagnosticsSummary","text":"Get summary report analyses diagnostics","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDiagnosticsSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a summary report of the analyses diagnostics — getDiagnosticsSummary","text":"","code":"getDiagnosticsSummary(outputFolder)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDiagnosticsSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a summary report of the analyses diagnostics — getDiagnosticsSummary","text":"outputFolder Name folder outputs written .","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getDiagnosticsSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a summary report of the analyses diagnostics — getDiagnosticsSummary","text":"tibble containing summary diagnostics outcome-covariate-analysis combination.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getFileReference.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file reference — getFileReference","title":"Get file reference — getFileReference","text":"Get file reference","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getFileReference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file reference — getFileReference","text":"","code":"getFileReference(outputFolder)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getFileReference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file reference — getFileReference","text":"outputFolder Name folder outputs written .","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getFileReference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file reference — getFileReference","text":"tibble containing names files various artifacts created outcome-exposures set.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Output the full model — getModel","title":"Output the full model — getModel","text":"Output full model","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output the full model — getModel","text":"","code":"getModel(sccsModel)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output the full model — getModel","text":"sccsModel object type SccsModel created using fitSccsModel() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output the full model — getModel","text":"tibble coefficients confidence intervals (-regularized) covariates model.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getResultsDataModelSpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Get specifications for SelfControlledCaseSeries results data model — getResultsDataModelSpecifications","title":"Get specifications for SelfControlledCaseSeries results data model — getResultsDataModelSpecifications","text":"Get specifications SelfControlledCaseSeries results data model","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getResultsDataModelSpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get specifications for SelfControlledCaseSeries results data model — getResultsDataModelSpecifications","text":"","code":"getResultsDataModelSpecifications()"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getResultsDataModelSpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get specifications for SelfControlledCaseSeries results data model — getResultsDataModelSpecifications","text":"tibble data frame object specifications","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getResultsSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a summary report of the analyses results — getResultsSummary","title":"Get a summary report of the analyses results — getResultsSummary","text":"Get summary report analyses results","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getResultsSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a summary report of the analyses results — getResultsSummary","text":"","code":"getResultsSummary(outputFolder)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getResultsSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a summary report of the analyses results — getResultsSummary","text":"outputFolder Name folder outputs written .","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/getResultsSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a summary report of the analyses results — getResultsSummary","text":"tibble containing summary statistics outcome-covariate-analysis combination.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasAgeEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the model contain an age effect? — hasAgeEffect","title":"Does the model contain an age effect? — hasAgeEffect","text":"model contain age effect?","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasAgeEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the model contain an age effect? — hasAgeEffect","text":"","code":"hasAgeEffect(sccsModel)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasAgeEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the model contain an age effect? — hasAgeEffect","text":"sccsModel object type SccsModel created using fitSccsModel() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasAgeEffect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the model contain an age effect? — hasAgeEffect","text":"TRUE model contains age effect, otherwise FALSE.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasCalendarTimeEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the model contain an age effect? — hasCalendarTimeEffect","title":"Does the model contain an age effect? — hasCalendarTimeEffect","text":"model contain age effect?","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasCalendarTimeEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the model contain an age effect? — hasCalendarTimeEffect","text":"","code":"hasCalendarTimeEffect(sccsModel)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasCalendarTimeEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the model contain an age effect? — hasCalendarTimeEffect","text":"sccsModel object type SccsModel created using fitSccsModel() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasCalendarTimeEffect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the model contain an age effect? — hasCalendarTimeEffect","text":"TRUE model contains age effect, otherwise FALSE.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasSeasonality.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the model contain an age effect? — hasSeasonality","title":"Does the model contain an age effect? — hasSeasonality","text":"model contain age effect?","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasSeasonality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the model contain an age effect? — hasSeasonality","text":"","code":"hasSeasonality(sccsModel)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasSeasonality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the model contain an age effect? — hasSeasonality","text":"sccsModel object type SccsModel created using fitSccsModel() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/hasSeasonality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the model contain an age effect? — hasSeasonality","text":"TRUE model contains age effect, otherwise FALSE.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsData.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is a SccsData object — isSccsData","title":"Check whether an object is a SccsData object — isSccsData","text":"Check whether object SccsData object","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is a SccsData object — isSccsData","text":"","code":"isSccsData(x)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is a SccsData object — isSccsData","text":"x object check.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is a SccsData object — isSccsData","text":"logical value.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsIntervalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is a SccsIntervalData object — isSccsIntervalData","title":"Check whether an object is a SccsIntervalData object — isSccsIntervalData","text":"Check whether object SccsIntervalData object","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsIntervalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is a SccsIntervalData object — isSccsIntervalData","text":"","code":"isSccsIntervalData(x)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsIntervalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is a SccsIntervalData object — isSccsIntervalData","text":"x object check.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/isSccsIntervalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is a SccsIntervalData object — isSccsIntervalData","text":"logical value.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadExposuresOutcomeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a list of ExposuresOutcome from file — loadExposuresOutcomeList","title":"Load a list of ExposuresOutcome from file — loadExposuresOutcomeList","text":"Load list objects type ExposuresOutcome file. file JSON format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadExposuresOutcomeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a list of ExposuresOutcome from file — loadExposuresOutcomeList","text":"","code":"loadExposuresOutcomeList(file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadExposuresOutcomeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a list of ExposuresOutcome from file — loadExposuresOutcomeList","text":"file name file","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadExposuresOutcomeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a list of ExposuresOutcome from file — loadExposuresOutcomeList","text":"list objects type ExposuresOutcome.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsAnalysisList.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a list of sccsAnalysis from file — loadSccsAnalysisList","title":"Load a list of sccsAnalysis from file — loadSccsAnalysisList","text":"Load list objects type SccsAnalysis file. file JSON format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsAnalysisList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a list of sccsAnalysis from file — loadSccsAnalysisList","text":"","code":"loadSccsAnalysisList(file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsAnalysisList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a list of sccsAnalysis from file — loadSccsAnalysisList","text":"file name file","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsAnalysisList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a list of sccsAnalysis from file — loadSccsAnalysisList","text":"list objects type SccsAnalysis.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsData.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the cohort method data from a file — loadSccsData","title":"Load the cohort method data from a file — loadSccsData","text":"Loads object type SccsData file file system.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the cohort method data from a file — loadSccsData","text":"","code":"loadSccsData(file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load the cohort method data from a file — loadSccsData","text":"file name file containing data.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load the cohort method data from a file — loadSccsData","text":"object class SccsData.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsIntervalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the cohort method data from a file — loadSccsIntervalData","title":"Load the cohort method data from a file — loadSccsIntervalData","text":"Loads object type SccsIntervalData file file system.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsIntervalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the cohort method data from a file — loadSccsIntervalData","text":"","code":"loadSccsIntervalData(file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsIntervalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load the cohort method data from a file — loadSccsIntervalData","text":"file name file containing data.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/loadSccsIntervalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load the cohort method data from a file — loadSccsIntervalData","text":"object class SccsIntervalData.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/migrateDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Migrate Data model — migrateDataModel","title":"Migrate Data model — migrateDataModel","text":"Migrate data current state next state strongly advised backup data (either sqlite files, backup database (case using postgres backend) kept csv/zip files data generation.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/migrateDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migrate Data model — migrateDataModel","text":"","code":"migrateDataModel(connectionDetails, databaseSchema, tablePrefix = \"\")"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/migrateDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Migrate Data model — migrateDataModel","text":"connectionDetails DatabaseConnector connection details object databaseSchema String schema database schema lives tablePrefix (Optional) Use table prefix used table names (e.g. \"cd_\")","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the age effect — plotAgeEffect","title":"Plot the age effect — plotAgeEffect","text":"Plot age effect","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the age effect — plotAgeEffect","text":"","code":"plotAgeEffect(sccsModel, rrLim = c(0.1, 10), title = NULL, fileName = NULL)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the age effect — plotAgeEffect","text":"sccsModel object type sccsModel created using fitSccsModel function. rrLim limits incidence rate ratio scale plot. title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggsave ggplot2 package supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeEffect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the age effect — plotAgeEffect","text":"Ggplot object. Use ggsave function save file.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeEffect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the age effect — plotAgeEffect","text":"Plot spline curve age effect.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeSpans.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the age ranges spanned by each observation period. — plotAgeSpans","title":"Plot the age ranges spanned by each observation period. — plotAgeSpans","text":"Plot age ranges spanned observation period.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeSpans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the age ranges spanned by each observation period. — plotAgeSpans","text":"","code":"plotAgeSpans(   studyPopulation,   maxPersons = 10000,   title = NULL,   fileName = NULL )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeSpans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the age ranges spanned by each observation period. — plotAgeSpans","text":"studyPopulation object created using createStudyPopulation() function. maxPersons maximum number persons plot. number persons random sample taken avoid visual clutter. title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggplot2::ggsave() supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeSpans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the age ranges spanned by each observation period. — plotAgeSpans","text":"ggplot object. Use ggplot2::ggsave() function save file different format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotAgeSpans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the age ranges spanned by each observation period. — plotAgeSpans","text":"Plots line per patient age observation start age observation end.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the calendar time effect — plotCalendarTimeEffect","title":"Plot the calendar time effect — plotCalendarTimeEffect","text":"Plot calendar time effect","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the calendar time effect — plotCalendarTimeEffect","text":"","code":"plotCalendarTimeEffect(   sccsModel,   rrLim = c(0.1, 10),   title = NULL,   fileName = NULL )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the calendar time effect — plotCalendarTimeEffect","text":"sccsModel object type sccsModel created using fitSccsModel function. rrLim limits incidence rate ratio scale plot. title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggsave ggplot2 package supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeEffect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the calendar time effect — plotCalendarTimeEffect","text":"Ggplot object. Use ggsave function save file.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeEffect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the calendar time effect — plotCalendarTimeEffect","text":"Plot spline curve calendar time effect.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeSpans.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the calendar time ranges spanned by each observation period. — plotCalendarTimeSpans","title":"Plot the calendar time ranges spanned by each observation period. — plotCalendarTimeSpans","text":"Plot calendar time ranges spanned observation period.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeSpans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the calendar time ranges spanned by each observation period. — plotCalendarTimeSpans","text":"","code":"plotCalendarTimeSpans(   studyPopulation,   maxPersons = 10000,   title = NULL,   fileName = NULL )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeSpans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the calendar time ranges spanned by each observation period. — plotCalendarTimeSpans","text":"studyPopulation object created using createStudyPopulation() function. maxPersons maximum number persons plot. number persons random sample taken avoid visual clutter. title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggplot2::ggsave() supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeSpans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the calendar time ranges spanned by each observation period. — plotCalendarTimeSpans","text":"ggplot object. Use ggplot2::ggsave() function save file different format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotCalendarTimeSpans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the calendar time ranges spanned by each observation period. — plotCalendarTimeSpans","text":"Plots line per patient observation start observation end.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventObservationDependence.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot time from event to observation end for censored and uncensored time. — plotEventObservationDependence","title":"Plot time from event to observation end for censored and uncensored time. — plotEventObservationDependence","text":"Plot time event observation end censored uncensored time.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventObservationDependence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot time from event to observation end for censored and uncensored time. — plotEventObservationDependence","text":"","code":"plotEventObservationDependence(studyPopulation, title = NULL, fileName = NULL)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventObservationDependence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot time from event to observation end for censored and uncensored time. — plotEventObservationDependence","text":"studyPopulation object created using createStudyPopulation() function. title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggplot2::ggsave() supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventObservationDependence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot time from event to observation end for censored and uncensored time. — plotEventObservationDependence","text":"ggplot object. Use ggplot2::ggsave() function save file different format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventObservationDependence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot time from event to observation end for censored and uncensored time. — plotEventObservationDependence","text":"plot shows whether difference time (first) event observation period end periods ' censored' 'uncensored'. 'censored' mean periods end normally expect. , define periods uncensored end either study end date (specified), database end date (.e. date data captured database), maximum age (specified). periods assumed censored. proposed Farrington et al., comparing two plots, can gain insight whether censoring dependent occurrence event.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventObservationDependence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot time from event to observation end for censored and uncensored time. — plotEventObservationDependence","text":"Farrington P, Whitaker H, Ghebremichael Weldeselassie Y (2018), Self-controlled case series studies: modelling guide R, Taylor & Francis","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventToCalendarTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the ratio of observed to expected events over calendar time. — plotEventToCalendarTime","title":"Plot the ratio of observed to expected events over calendar time. — plotEventToCalendarTime","text":"Plot ratio observed expected events calendar time.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventToCalendarTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the ratio of observed to expected events over calendar time. — plotEventToCalendarTime","text":"","code":"plotEventToCalendarTime(   studyPopulation,   sccsModel = NULL,   title = NULL,   fileName = NULL )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventToCalendarTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the ratio of observed to expected events over calendar time. — plotEventToCalendarTime","text":"studyPopulation object created using createStudyPopulation() function. sccsModel Optional: fitted SCCS model created using fitSccsModel(). model contains splines seasonality calendar time panel added outcome counts adjusted splines. title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggplot2::ggsave() supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventToCalendarTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the ratio of observed to expected events over calendar time. — plotEventToCalendarTime","text":"ggplot object. Use ggplot2::ggsave() function save file different format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotEventToCalendarTime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the ratio of observed to expected events over calendar time. — plotEventToCalendarTime","text":"Plot ratio observed expected events calendar time. expected count expected rate considers persons observed month, specified model, adjustment season calendar time.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotExposureCentered.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot information centered around the start of exposure — plotExposureCentered","title":"Plot information centered around the start of exposure — plotExposureCentered","text":"Plot information centered around start exposure","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotExposureCentered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot information centered around the start of exposure — plotExposureCentered","text":"","code":"plotExposureCentered(   studyPopulation,   sccsData,   exposureEraId = NULL,   highlightExposedEvents = TRUE,   title = NULL,   fileName = NULL )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotExposureCentered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot information centered around the start of exposure — plotExposureCentered","text":"studyPopulation object created using createStudyPopulation() function. sccsData object type SccsData created using getDbSccsData function. exposureEraId exposure create era data . specified assumed one exposure data loaded database. highlightExposedEvents Highlight events occurred exposure era using different color? title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggplot2::ggsave() supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotExposureCentered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot information centered around the start of exposure — plotExposureCentered","text":"ggplot object. Use ggplot2::ggsave() function save file different format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotExposureCentered.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot information centered around the start of exposure — plotExposureCentered","text":"plot shows number events number subjects observation week-sized intervals relative start first exposure.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotSeasonality.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the seasonality effect — plotSeasonality","title":"Plot the seasonality effect — plotSeasonality","text":"Plot seasonality effect","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotSeasonality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the seasonality effect — plotSeasonality","text":"","code":"plotSeasonality(sccsModel, rrLim = c(0.1, 10), title = NULL, fileName = NULL)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotSeasonality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the seasonality effect — plotSeasonality","text":"sccsModel object type sccsModel created using fitSccsModel function. rrLim limits incidence rate ratio scale plot. title Optional: main title plot fileName Name file plot saved, example 'plot.png'. See function ggsave ggplot2 package supported file formats.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotSeasonality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the seasonality effect — plotSeasonality","text":"Ggplot object. Use ggsave function save file.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/plotSeasonality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the seasonality effect — plotSeasonality","text":"Plot spline curve seasonality effect.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/runSccsAnalyses.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a list of analyses — runSccsAnalyses","title":"Run a list of analyses — runSccsAnalyses","text":"Run list analyses","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/runSccsAnalyses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a list of analyses — runSccsAnalyses","text":"","code":"runSccsAnalyses(   connectionDetails,   cdmDatabaseSchema,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   exposureDatabaseSchema = cdmDatabaseSchema,   exposureTable = \"drug_era\",   outcomeDatabaseSchema = cdmDatabaseSchema,   outcomeTable = \"cohort\",   customCovariateDatabaseSchema = cdmDatabaseSchema,   customCovariateTable = \"cohort\",   nestingCohortDatabaseSchema = cdmDatabaseSchema,   nestingCohortTable = \"cohort\",   outputFolder = \"./SccsOutput\",   sccsMultiThreadingSettings = createSccsMultiThreadingSettings(),   sccsAnalysesSpecifications )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/runSccsAnalyses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a list of analyses — runSccsAnalyses","text":"connectionDetails R object type ConnectionDetails created using function DatabaseConnector::createConnectionDetails(). cdmDatabaseSchema name database schema contains OMOP CDM instance.  Requires read permissions database. SQL Server, specify database schema, example 'cdm_instance.dbo'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. exposureDatabaseSchema name database schema location exposure data used define exposure cohorts available. exposureTable = \"DRUG_ERA\", exposureDatabaseSchema used assumed cdmDatabaseSchema.  Requires read permissions database. exposureTable table name contains exposure cohorts.  exposureTable <> \"DRUG_ERA\", expectation exposureTable format COHORT table: cohort_concept_id, SUBJECT_ID, COHORT_START_DATE, COHORT_END_DATE. outcomeDatabaseSchema name database schema location data used define outcome cohorts available. Requires read permissions database. outcomeTable table name contains outcome cohorts. customCovariateDatabaseSchema name database schema location custom covariate data available. customCovariateTable Name table holding custom covariates. table structure cohort table. nestingCohortDatabaseSchema name database schema location nesting cohort defined. nestingCohortTable Name table holding nesting cohort. table structure cohort table. outputFolder Name folder outputs written . sccsMultiThreadingSettings object type SccsMultiThreadingSettings created using createSccsMultiThreadingSettings() createDefaultSccsMultiThreadingSettings() functions. sccsAnalysesSpecifications object type SccsAnalysesSpecifications created using createSccsAnalysesSpecifications() function","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/runSccsAnalyses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a list of analyses — runSccsAnalyses","text":"tibble describing exposure-outcome-analysisId combination intermediary outcome model files can found, relative outputFolder.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/runSccsAnalyses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a list of analyses — runSccsAnalyses","text":"Run list analyses exposures-outcomes interest. function run specified analyses hypotheses interest, meaning total number outcome models length(sccsAnalysisList) * length(exposuresOutcomeList) provide several analyses determine whether analyses anything common, take advantage fact.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/runSccsAnalyses.html","id":"analyses-to-exclude","dir":"Reference","previous_headings":"","what":"Analyses to Exclude","title":"Run a list of analyses — runSccsAnalyses","text":"Normally, runSccsAnalyses run combinations exposures-outcome-analyses settings. However, sometimes may need combinations. Using analysesToExclude argument, can remove certain items full matrix. argument data frame least one following columns: exposureId outcomeId nestingCohortId analysisId data frame joined outcome model reference table executing, matching rows removed. example, one specifies one exposure ID analysis ID, analyses exposure analysis ID skipped.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveExposuresOutcomeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a list of ExposuresOutcome to file — saveExposuresOutcomeList","title":"Save a list of ExposuresOutcome to file — saveExposuresOutcomeList","text":"Write list objects type ExposuresOutcome file. file JSON format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveExposuresOutcomeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a list of ExposuresOutcome to file — saveExposuresOutcomeList","text":"","code":"saveExposuresOutcomeList(exposuresOutcomeList, file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveExposuresOutcomeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a list of ExposuresOutcome to file — saveExposuresOutcomeList","text":"exposuresOutcomeList list objects type ExposuresOutcome created using createExposuresOutcome() function. file name file results written","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsAnalysisList.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a list of SccsAnalysis to file — saveSccsAnalysisList","title":"Save a list of SccsAnalysis to file — saveSccsAnalysisList","text":"Write list objects type SccsAnalysis file. file JSON format.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsAnalysisList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a list of SccsAnalysis to file — saveSccsAnalysisList","text":"","code":"saveSccsAnalysisList(sccsAnalysisList, file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsAnalysisList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a list of SccsAnalysis to file — saveSccsAnalysisList","text":"sccsAnalysisList list objects type SccsAnalysis created using createSccsAnalysis() function. file name file results written","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsData.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the cohort method data to file — saveSccsData","title":"Save the cohort method data to file — saveSccsData","text":"Saves object type SccsData file.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the cohort method data to file — saveSccsData","text":"","code":"saveSccsData(sccsData, file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the cohort method data to file — saveSccsData","text":"sccsData object type SccsData created using getDbSccsData function. file name file data written. file already exists overwritten.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the cohort method data to file — saveSccsData","text":"Returns output.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsIntervalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the cohort method data to file — saveSccsIntervalData","title":"Save the cohort method data to file — saveSccsIntervalData","text":"Saves object type SccsIntervalData file.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsIntervalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the cohort method data to file — saveSccsIntervalData","text":"","code":"saveSccsIntervalData(sccsIntervalData, file)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsIntervalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the cohort method data to file — saveSccsIntervalData","text":"sccsIntervalData object type SccsIntervalData created using createSccsIntervalData function. file name file data written. file already exists overwritten.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/saveSccsIntervalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the cohort method data to file — saveSccsIntervalData","text":"Returns output.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SccsData-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SCCS Data — SccsData-class","title":"SCCS Data — SccsData-class","text":"SccsData S4 class inherits Andromeda. contains information cases covariates. SccsData typically created using getDbSccsData(), can saved using saveSccsData(), loaded using loadSccsData().","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SccsData-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCCS Data — SccsData-class","text":"","code":"# S4 method for class 'SccsData' show(object)  # S4 method for class 'SccsData' summary(object)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SccsData-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCCS Data — SccsData-class","text":"object object type SccsData.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SccsIntervalData-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SCCS Interval Data — SccsIntervalData-class","title":"SCCS Interval Data — SccsIntervalData-class","text":"SccsIntervalData` S4 class inherits Andromeda. contains information cases covariates, divided non-overlapping time intervals. SccsIntervalData typically created using createSccsIntervalData(), can saved using saveSccsIntervalData(), loaded using loadSccsIntervalData().","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SccsIntervalData-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCCS Interval Data — SccsIntervalData-class","text":"","code":"# S4 method for class 'SccsIntervalData' show(object)  # S4 method for class 'SccsIntervalData' summary(object)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SccsIntervalData-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCCS Interval Data — SccsIntervalData-class","text":"object object type SccsIntervalData.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SelfControlledCaseSeries-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SelfControlledCaseSeries: Self-Controlled Case Series — SelfControlledCaseSeries-package","title":"SelfControlledCaseSeries: Self-Controlled Case Series — SelfControlledCaseSeries-package","text":"SelfControlledCaseSeries implements self- controlled case series (SCCS) analyses using observational data OMOP Common Data Model. extracts necessary data database transforms format required SCCS. Age season can modeled using splines assuming constant hazard within calendar months. Event-dependent censoring observation period can corrected . Many exposures can included (MSCCS), regularization coefficients except exposure interest. Includes diagnostics major assumptions SCCS.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/SelfControlledCaseSeries-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SelfControlledCaseSeries: Self-Controlled Case Series — SelfControlledCaseSeries-package","text":"Maintainer: Martijn Schuemie schuemie@ohdsi.org Authors: Patrick Ryan Trevor Shaddox Marc Suchard","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/simulateSccsData.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate SCCS data — simulateSccsData","title":"Simulate SCCS data — simulateSccsData","text":"Simulate SCCS data","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/simulateSccsData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate SCCS data — simulateSccsData","text":"","code":"simulateSccsData(nCases, settings)"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/simulateSccsData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate SCCS data — simulateSccsData","text":"nCases number cases simulate. settings object type SccsSimulationSettings created using createSccsSimulationSettings() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/simulateSccsData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate SCCS data — simulateSccsData","text":"object type SccsData.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/uploadResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload results to the database server. — uploadResults","title":"Upload results to the database server. — uploadResults","text":"Requires results data model tables created using createResultsDataModel function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/uploadResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload results to the database server. — uploadResults","text":"","code":"uploadResults(   connectionDetails,   schema,   zipFileName,   forceOverWriteOfSpecifications = FALSE,   purgeSiteDataBeforeUploading = TRUE,   tempFolder = tempdir(),   tablePrefix = \"\",   ... )"},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/reference/uploadResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload results to the database server. — uploadResults","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. schema schema server tables created. zipFileName name zip file. forceOverWriteOfSpecifications TRUE, specifications phenotypes, cohort definitions, analysis overwritten already exist database. use specifications changed since last upload. purgeSiteDataBeforeUploading TRUE, inserting data specific databaseId data site dropped. assumes input zip file contains full data data site. tempFolder folder local file system zip files extracted . cleaned function finished. Can used specify temp folder drive sufficient space default system temp space limited. tablePrefix (Optional)  string insert table names database table names ... See ResultModelManager::uploadResults","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-600","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 6.0.0","title":"SelfControlledCaseSeries 6.0.0","text":"major release introduces two overall changes: adding new set diagnostics, new settings objects. Changes related adding new diagnostics: Deprecated computeTimeStability() computePreExposureGainP() functions. Added checkTimeStabilityAssumption(), checkEventObservationIndependenceAssumption(), checkEventExposureIndependenceAssumption() checkRareOutcomeAssumption() functions. implement diagnostics four major assumptions SCCS design. Added endOfObservationEraLength argument createSccsIntervalData() function, defaults 30. adds probe window end observation period. estimate window used checkEventExposureIndependenceAssumption() diagnostic. Added preExposure argument createEraCovariateSettings() function, defaults start < 0. can used designate one windows pre-exposure window, used checkEventExposureIndependenceAssumption() diagnostic. Moved sccsDiagnosticThresholds exportToCsv() runSccsAnalyses(). Estimates fail diagnostics now removed empirical calibration, afterwards. general lead narrower calibrated confidence intervals. Added getDiagnosticsSummary() function. Changes related new settings objects: settings objects changed R6 objects. make easier external developers generate valid settings JSON files. individual analytic functions (getDbSccsData(), createStudyPopulationArgs(), createSccsIntervalData(), createScriIntervalData(), fitSccsModel()) now use setting objects arguments. remove code duplication, increase consistency single study multi-analyses frameworks. analysis settings runSccsAnalyses() combined SccsAnalysesSpecifications object can created using new createSccsAnalysesSpecifications() function. changes: Removed deprecated useCustomCovariates, useNestingCohort, studyStartDate, studyEndDate arguments getDbSccsData() createGetDbSccsDataArgs(). Removed deprecated minCasesForAgeSeason createSccsIntervalData() createCreateSccsIntervalDataArgs(). Removed cdmVersion argument getDbSccsData() runSccsAnalyses() functions.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-533","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.3.3","title":"SelfControlledCaseSeries 5.3.3","text":"Bugfixes Fixed another error calendar time splines cases, study period, restricting first outcome . Fixed bug attrition table lead non-integer observed days. Adding support Andromeda 1.0.0.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-532","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.3.2","title":"SelfControlledCaseSeries 5.3.2","text":"Bugfixes Fixed error calendar time splines cases, study period.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-531","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.3.1","title":"SelfControlledCaseSeries 5.3.1","text":"Bugfixes Fixed (near) infinite loop using end--observation dependence correction weighting function poorly integrable. Changed computation p-value time-trend robust extreme time trends.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-530","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.3.0","title":"SelfControlledCaseSeries 5.3.0","text":"Changes Added controlType argument runSccsAnalyses(), explicitly setting type (negative) controls: outcome controls exposure controls. Setting “outcome” (default) now group exposure (nesting cohort defined).","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-523","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.2.3","title":"SelfControlledCaseSeries 5.2.3","text":"Changes informative error messages analysis specifications inconsistent. Throwing error defining analysis specify least one era covariate exposure interest. includeEraIds argument createEraCovariateSettings() longer default, forcing users explicitly set avoid erroneously specifying covariates. Bugfixes Fixed ‘ORDER ignored subqueries without LIMIT’ warning calling createSccsIntervalData(). Fixed ‘std::bad_alloc’ error observation period start date 1970. Fixed NA covariate values age, season, calendar time splines removed fewer cases knots.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-522","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.2.2","title":"SelfControlledCaseSeries 5.2.2","text":"Bugfixes Fix export multiple exposure-outcomes per SCCS data file.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-521","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.2.1","title":"SelfControlledCaseSeries 5.2.1","text":"Bugfixes Fix exposures_outcome_set_id field ‘sccs_exposure’ ‘sccs_exposures_outcome_set’ tables.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-520","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.2.0","title":"SelfControlledCaseSeries 5.2.0","text":"Changes Switching exposures_outcome_set_id sequential number hash avoid issues dividing set analyses various machines, combining results later. Bugfixes Fixed error SQL “#case_in_period”. Fixed case count createStudyPopulation() restricting time prior getDbSccsData() call, e.g. defining study period /nesting cohort. Preventing duplicate calendar time age knots, causing unique key violation errors uploading.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-511","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.1.1","title":"SelfControlledCaseSeries 5.1.1","text":"Bugfixes Fixed ‘oneSidedP found’ error unable fit model.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-510","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.1.0","title":"SelfControlledCaseSeries 5.1.0","text":"Changes Allowing nesting cohort ID specified part exposure-outcome pair. Deprecating useCustomCovariates useNestingCohort arguments getDbSccsData() function. Optimized runSccsAnalyses() allow running bigger sets analyses. Adding sccs_time_period table export, capturing calendar time period included analysis. Adding one-sided (calibrated) p-values results summary results model. exportToCsv() can now use multithreading speed. Adding unblindForEvidenceSynthesis field sccs_diagnostics_summary_table. Unblinding logic now CohortMethod: also unblind diagnostic evaluated (instead unblinding passing). Bugfixes Handling edge case computeTimeStability() 1 month. Correcting computation fraction start month observed computeTimeStability() (1/31).","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-500","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 5.0.0","title":"SelfControlledCaseSeries 5.0.0","text":"Changes Added restrictTimeToEraId argument createStudyPopulation() createCreateStudyPopulationArgs() functions allow automatically restricting study time exposure observed (e.g. drug market). Switching cubic quadratic splines age, season, calendar time reduce degrees freedom. Deprecating studyStartDate studyEndDate arguments getDbSccsData() function. Introducing studyStartDates studyEndDates arguments getDbSccsData() function. allow specification multiple (non-overlapping) study periods. can example useful one wishes exclude time COVID-19 pandemic avoid temporal instability. spline calendar time effects can now multi-segmented, multiple study periods. Internal knots evenly distributed segments based amount data per segment. Additional boundary knots automatically added additional segments. Changed stability metric implemented computeTimeStability() function two ways: First, observed rate outcome month now compared expected rate. expected rate considers persons observed month, specified, adjustment season calendar time. Second, instead considering whether single month exceeded threshold, metric now considers whether mean ratio across months exceeds threshold. Together, makes metric robust, less likely declare instability majority data stable. Changed plotEventToCalendarTime() show observed--expected ratio, without adjustments season calendar time (specified model). Bugfix Using BIGINT summing patient days avoid errors populations large.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-420","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 4.2.0","title":"SelfControlledCaseSeries 4.2.0","text":"Changes Adding genderConceptIds argument createStudyPopulation(). Dropping dependency survival. Bugfix Handling edge case computeMdrr() observed time exposed. (Returning Inf instead throwing error.) ignoring allowRegularization calendar time settings. person multiple nesting cohort entries, prevent double-counting cases attrition table nesting cohort entries outcome.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-410","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 4.1.0","title":"SelfControlledCaseSeries 4.1.0","text":"Changes studyStartDate studyEndDate arguments changed back strings instead dates facilitate easier conversion JSON. Bug fixes Minor fix related upcoming DatabaseConnector V6.0.0.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-400","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 4.0.0","title":"SelfControlledCaseSeries 4.0.0","text":"Changes Removing deprecated oracleTempSchema argument getDbSccsData() runSccsAnalyses() functions. Adding checking user input functions. studyStartDate studyEndDate arguments getDbSccsData() function changed character Date type. Dropping support split points. can achieved creating multiple era covariates different times risk. computeMdrr() now works either SccsIntervalData SccsModel object. Major overhaul multiple-analyses framework: Added createExposure() function creating objects type `exposure. argument allows specifying true effect size exposure, known (e.g. negative controls). createExposureOutcome() function replaced createExposuresOutcome() function, accepts multiple objects type exposure. createEraCovariateSettings() function new argument exposureOfInterest determines estimate reported result summary. results summary table pivoted now one estimate per row. results summary table now precomputed part runSccsAnalyses(), automatically includes empirically calibrated estimates (controls provided) can retrieved using getResultsSummary() function. reference table (output runSccsAnalyses()) can now always retrieved using getFileReference() function. Dropping exposureType outcomeType options createSccsAnalysis () function, since notion analysis-specific exposure outcome selection strategies can also implemented using analysesToExclude argument runSccsAnalyses(). Settings related multi-threading combined single settings object created using new createSccsMultiThreadingSettings() function. design argument createSccsAnalysis() function removed, createSccsIntervalDataArgs createScriIntervalDataArgs arguments replaced single createIntervalDataArgs argument accepts arguments createSccsIntervalData() createScriIntervalData()` functions. Added exportToCsv() function, export results multi-analysis study CSV files sharing sites. output results model now documented new vignette.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-340","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 3.4.0","title":"SelfControlledCaseSeries 3.4.0","text":"Changes Setting deleteCovariatesSmallCount argument 0 getDbSccsData() createGetDbSccsDataArgs() functions. originally set 100 SCCS analyses many covariates, makes sense considering one exposures. Adding computePreExposureGainP() function. Setting default maxRatio computeTimeStability() 1.25 (instead 1.1) avoid false positives. Bug fixes Fixing “RIGHT FULL OUTER JOINs currently supported” error SQLite using drug_era condition_era table. Fixing computeTimeStability() per-month p-value (showing minimum p-value months). Fixing uncaught errors fitting models caused Cyclops’s new return flags. Fix error Andromeda object already closed generating SCCS era data.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-330","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 3.3.0","title":"SelfControlledCaseSeries 3.3.0","text":"Changes Setting default Cyclops control object use resetCoefficients = TRUE ensure always get exact model, irrespective number threads used. Added maxRatio argument computeTimeStability(). Bug fixes Fixing missing months plotEventToCalendarTime() observation period starts ends months. Now limiting number unexposed cases including calendar time spline (set minCasesForTimeCovariates). Fix error calling computeMdrr() sccsIntervalData object contain exposure interest. Fixed typo computeMdrr(), renaming propPopExposued propPopulationExposed.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-321","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 3.2.1","title":"SelfControlledCaseSeries 3.2.1","text":"BugFixes Remove dependency develop branch SqlRender.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-320","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 3.2.0","title":"SelfControlledCaseSeries 3.2.0","text":"Changes Adding optional calendar time covariate. Added analysesToExclude argument runSccsAnalyses(), allowing users specify exposure-outcome-analysis combinations exclude execution. Fixing seed regularization cross-validation improve reproducibility. Added computeTimeStability() function.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-310","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 3.1.0","title":"SelfControlledCaseSeries 3.1.0","text":"Changes Adding likelihood profile SCCS model objects profileLikelihood argument set TRUE calling createEraCovariateSettings(). Deprecating oracleTempSchema argument favor tempEmulationSchema accordance new SqlRender convention. Adding optional title argument plotting functions. Adding highlightExposedEvents argument plotExposureCentered function. Switching power calculation default method signed root likelihood ratio recommended Musonda et al. (2005). BugFixes Prevent error excluding variable data regularization. Removing unexposed subjects computing power avoid overestimating statistical power.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-300","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 3.0.0","title":"SelfControlledCaseSeries 3.0.0","text":"Changes Adding self-controlled risk interval design. Downloading person observation period IDs strings avoid issues 64-bit integers. (IDs used SCCS, used reference ). Outputting log likelihood ratio part estimates. Computing meta-data covariates. BugFixes Fixed syntax error SQL using nesting cohort. Fixing error sampled cohort empty. Fixing nesting. Attrition table now also includes lines remaining count zero. Fixing custom covariates download. Fixing error Oracle due long temp table name. Fixing computation confidence intervals (CIs) estimates CIs computed data.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-200","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 2.0.0","title":"SelfControlledCaseSeries 2.0.0","text":"Changes Switching ff Andromeda storing large data objects. Making creation study population separate step, new createStudyPopulation function. data cohorts, exposure, outcome eras retrieved database now consistently referred ‘eras’. Data transformed non-overlapping intervals now referred ‘sccsIntervalData’. Adding tracking attrition. Automatically removing age spline selected censoring model already adjusts age. BugFixes Generating sequential case IDs instead observation period IDs avoid collisions due loss precision converting BIGINT R’s numeric. Added heuristics detect ill-behaving censoring functions adjusting event-dependent censoring.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-142","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 1.4.2","title":"SelfControlledCaseSeries 1.4.2","text":"Bugfixes Fixed errors introduced R 4.0.0. Gracefully handling fitting outcome model hits max number iterations.","code":""},{"path":"https://ohdsi.github.io/SelfControlledCaseSeries/news/index.html","id":"selfcontrolledcaseseries-141","dir":"Changelog","previous_headings":"","what":"SelfControlledCaseSeries 1.4.1","title":"SelfControlledCaseSeries 1.4.1","text":"Bugfixes Several workaround issues ff package. Fixed bug causing age read incorrectly creating eras.","code":""}]
